

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                                           Thu Oct 20 16:14:12 2022


     1                           	processor	18F4520
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    12                           	psect	code,global,reloc=2,class=CODE,delta=1
    13                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    14                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    15                           	psect	mytext,local,reloc=2,class=CODE,delta=1
    16   000000                     
    17                           	psect	edata
    18   000000                     stk_offset	set	0
    19   000000                     auto_size	set	0
    20                           
    21                           ; stack_auto defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the auto object in question
    23   000000                     
    24                           ; stack_param defines a symbol /name/_offset which equates to the
    25                           ; stack offset of the parameter object in question
    26   000000                     
    27                           ; alloc_stack adjusts the SP to allocate space for auto objects
    28                           ; it also links in to the btemp symbol so that can be used
    29   000000                     
    30                           ; restore_stack adjusts the SP to remove all auto and parameter
    31                           ; objects from the stack prior to returning from a function
    32   000000                     
    33                           	psect	mytext
    34   007FC6                     _mypow:
    35                           	callstack 0
    36   007FC6  6603               	tstfsz	3,c
    37   007FC8  D004               	goto	INITIALIZATION
    38   007FCA  0E01               	movlw	1
    39   007FCC  6E01               	movwf	1,c
    40   007FCE  6A02               	clrf	2,c
    41   007FD0  0012               	return	
    42   007FD2                     INITIALIZATION:
    43   007FD2  C003 F005          	movff	3,5
    44   007FD6  C001 F003          	movff	1,3
    45   007FDA  0605               	decf	5,f,c
    46   007FDC                     LOOP:
    47   007FDC  5003               	movf	3,w,c
    48   007FDE  0201               	mulwf	1,c
    49   007FE0  CFF3 F011          	movff	prodl,17
    50   007FE4  CFF4 F010          	movff	prodh,16
    51   007FE8  0200               	mulwf	0,c
    52   007FEA  50F3               	movf	prodl,w,c
    53   007FEC  2610               	addwf	16,f,c
    54   007FEE  C011 F001          	movff	17,1
    55   007FF2  C010 F000          	movff	16,0
    56   007FF6  2E05               	decfsz	5,f,c
    57   007FF8  D7F1               	goto	LOOP
    58   007FFA  C000 F002          	movff	0,2
    59   007FFE  0012               	return	
    60                           tosu	equ	0xFFF
    61                           tosh	equ	0xFFE
    62                           tosl	equ	0xFFD
    63                           stkptr	equ	0xFFC
    64                           pclatu	equ	0xFFB
    65                           pclath	equ	0xFFA
    66                           pcl	equ	0xFF9
    67                           tblptru	equ	0xFF8
    68                           tblptrh	equ	0xFF7
    69                           tblptrl	equ	0xFF6
    70                           tablat	equ	0xFF5
    71                           prodh	equ	0xFF4
    72                           prodl	equ	0xFF3
    73                           indf0	equ	0xFEF
    74                           postinc0	equ	0xFEE
    75                           postdec0	equ	0xFED
    76                           preinc0	equ	0xFEC
    77                           plusw0	equ	0xFEB
    78                           fsr0h	equ	0xFEA
    79                           fsr0l	equ	0xFE9
    80                           wreg	equ	0xFE8
    81                           indf1	equ	0xFE7
    82                           postinc1	equ	0xFE6
    83                           postdec1	equ	0xFE5
    84                           preinc1	equ	0xFE4
    85                           plusw1	equ	0xFE3
    86                           fsr1h	equ	0xFE2
    87                           fsr1l	equ	0xFE1
    88                           bsr	equ	0xFE0
    89                           indf2	equ	0xFDF
    90                           postinc2	equ	0xFDE
    91                           postdec2	equ	0xFDD
    92                           preinc2	equ	0xFDC
    93                           plusw2	equ	0xFDB
    94                           fsr2h	equ	0xFDA
    95                           fsr2l	equ	0xFD9
    96                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                               Thu Oct 20 16:14:12 2022

                        LOOP 7FDC                         PRODH 000FF4                         PRODL 000FF3  
                      _mypow 7FC6                       isa$std 000001                INITIALIZATION 7FD2  
                   isa$xinst 000000  
