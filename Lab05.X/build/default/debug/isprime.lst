

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                                           Thu Oct 20 15:24:20 2022


     1                           	processor	18F4520
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    12                           	psect	code,global,reloc=2,class=CODE,delta=1
    13                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    14                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    15                           	psect	mytext,local,reloc=2,class=CODE,delta=1
    16   000000                     
    17                           	psect	edata
    18   000000                     stk_offset	set	0
    19   000000                     auto_size	set	0
    20                           
    21                           ; stack_auto defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the auto object in question
    23   000000                     
    24                           ; stack_param defines a symbol /name/_offset which equates to the
    25                           ; stack offset of the parameter object in question
    26   000000                     
    27                           ; alloc_stack adjusts the SP to allocate space for auto objects
    28                           ; it also links in to the btemp symbol so that can be used
    29   000000                     
    30                           ; restore_stack adjusts the SP to remove all auto and parameter
    31                           ; objects from the stack prior to returning from a function
    32   000000                     
    33                           	psect	mytext
    34   007FC4                     _isprime:
    35                           	callstack 0
    36   007FC4  0E02               	movlw	2
    37   007FC6  6E02               	movwf	2,c
    38   007FC8  D805               	rcall	LOOP
    39   007FCA  0EFF               	movlw	255
    40   007FCC  6000               	cpfslt	0,c
    41   007FCE  0012               	return	
    42   007FD0  0E01               	movlw	1
    43   007FD2  0012               	return	
    44   007FD4                     LOOP:
    45   007FD4  6AE8               	clrf	wreg,c
    46   007FD6  D80A               	rcall	MUL
    47   007FD8  0EFF               	movlw	255
    48   007FDA  6000               	cpfslt	0,c
    49   007FDC  0012               	return	
    50   007FDE  2A02               	incf	2,f,c
    51   007FE0  5002               	movf	2,w,c
    52   007FE2  02E8               	mulwf	wreg,c
    53   007FE4  50F3               	movf	prodl,w,c
    54   007FE6  5C01               	subwf	1,w,c
    55   007FE8  E7F5               	bnn	LOOP
    56   007FEA  0012               	return	
    57   007FEC                     MUL:
    58   007FEC  2402               	addwf	2,w,c
    59   007FEE  6001               	cpfslt	1,c
    60   007FF0  D7FD               	goto	MUL
    61   007FF2  5C02               	subwf	2,w,c
    62   007FF4  6CE8               	negf	wreg,c
    63   007FF6  6201               	cpfseq	1,c
    64   007FF8  0012               	return	
    65   007FFA  0EFF               	movlw	255
    66   007FFC  6E00               	movwf	0,c
    67   007FFE  0012               	return	
    68                           tosu	equ	0xFFF
    69                           tosh	equ	0xFFE
    70                           tosl	equ	0xFFD
    71                           stkptr	equ	0xFFC
    72                           pclatu	equ	0xFFB
    73                           pclath	equ	0xFFA
    74                           pcl	equ	0xFF9
    75                           tblptru	equ	0xFF8
    76                           tblptrh	equ	0xFF7
    77                           tblptrl	equ	0xFF6
    78                           tablat	equ	0xFF5
    79                           prodh	equ	0xFF4
    80                           prodl	equ	0xFF3
    81                           indf0	equ	0xFEF
    82                           postinc0	equ	0xFEE
    83                           postdec0	equ	0xFED
    84                           preinc0	equ	0xFEC
    85                           plusw0	equ	0xFEB
    86                           fsr0h	equ	0xFEA
    87                           fsr0l	equ	0xFE9
    88                           wreg	equ	0xFE8
    89                           indf1	equ	0xFE7
    90                           postinc1	equ	0xFE6
    91                           postdec1	equ	0xFE5
    92                           preinc1	equ	0xFE4
    93                           plusw1	equ	0xFE3
    94                           fsr1h	equ	0xFE2
    95                           fsr1l	equ	0xFE1
    96                           bsr	equ	0xFE0
    97                           indf2	equ	0xFDF
    98                           postinc2	equ	0xFDE
    99                           postdec2	equ	0xFDD
   100                           preinc2	equ	0xFDC
   101                           plusw2	equ	0xFDB
   102                           fsr2h	equ	0xFDA
   103                           fsr2l	equ	0xFD9
   104                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                               Thu Oct 20 15:24:20 2022

                         MUL 7FEC                          LOOP 7FD4                          WREG 000FE8  
                       PRODL 000FF3                       isa$std 000001                      _isprime 7FC4  
                   isa$xinst 000000  
