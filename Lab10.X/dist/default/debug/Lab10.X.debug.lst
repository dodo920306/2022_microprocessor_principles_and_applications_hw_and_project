

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 05 19:37:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Version 2.40
    39                           ; Generated 04/07/2022 GMT
    40                           ; 
    41                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4520 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     _RCREG	set	4014
    74   000000                     _TXREG	set	4013
    75   000000                     _PIE1bits	set	3997
    76   000000                     _SPBRG	set	4015
    77   000000                     _BAUDCONbits	set	4024
    78   000000                     _TXSTAbits	set	4012
    79   000000                     _CCP1CON	set	4029
    80   000000                     _ADCON0bits	set	4034
    81   000000                     _ADRESL	set	4035
    82   000000                     _ADRESH	set	4036
    83   000000                     _ADCON1	set	4033
    84   000000                     _PIR1bits	set	3998
    85   000000                     _PR2	set	4043
    86   000000                     _ADFM	set	32263
    87   000000                     _ADCON2bits	set	4032
    88   000000                     _IRCF0	set	32412
    89   000000                     _IRCF1	set	32413
    90   000000                     _CREN	set	32092
    91   000000                     _RCIF	set	31989
    92   000000                     _LATA	set	3977
    93   000000                     _TRISA	set	3986
    94   000000                     _INTCONbits	set	4082
    95   000000                     _TRISCbits	set	3988
    96   000000                     _RCONbits	set	4048
    97   000000                     _IPR1bits	set	3999
    98   000000                     _RCSTAbits	set	4011
    99   000000                     _T2CON	set	4042
   100   000000                     _IRCF2	set	32414
   101                           
   102                           	psect	smallconst
   103   000600                     __psmallconst:
   104                           	callstack 0
   105   000600  00                 	db	0
   106   000601                     STR_1:
   107   000601  00                 	db	0
   108   000602  00                 	db	0	; dummy byte at the end
   109   000000                     
   110                           ; #config settings
   111                           
   112                           	psect	cinit
   113   000B0E                     __pcinit:
   114                           	callstack 0
   115   000B0E                     start_initialization:
   116                           	callstack 0
   117   000B0E                     __initialization:
   118                           	callstack 0
   119                           
   120                           ; Clear objects allocated to COMRAM (64 bytes)
   121   000B0E  EE00  F001         	lfsr	0,__pbssCOMRAM
   122   000B12  0E40               	movlw	64
   123   000B14                     clear_0:
   124   000B14  6AEE               	clrf	postinc0,c
   125   000B16  06E8               	decf	wreg,f,c
   126   000B18  E1FD               	bnz	clear_0
   127   000B1A                     end_of_initialization:
   128                           	callstack 0
   129   000B1A                     __end_of__initialization:
   130                           	callstack 0
   131   000B1A  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   132   000B1C  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   133   000B1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   134   000B20  6EF8               	movwf	tblptru,c
   135   000B22  0100               	movlb	0
   136   000B24  EF40  F004         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMRAM
   139   000001                     __pbssCOMRAM:
   140                           	callstack 0
   141   000001                     _lenStr:
   142                           	callstack 0
   143   000001                     	ds	2
   144   000003                     _lightmode:
   145                           	callstack 0
   146   000003                     	ds	2
   147   000005                     _mystring:
   148                           	callstack 0
   149   000005                     	ds	20
   150   000019                     _state:
   151                           	callstack 0
   152   000019                     	ds	20
   153   00002D                     _str:
   154                           	callstack 0
   155   00002D                     	ds	20
   156                           
   157                           	psect	cstackBANK0
   158   000080                     __pcstackBANK0:
   159                           	callstack 0
   160   000080                     ??_Lo_ISR:
   161                           
   162                           ; 1 bytes @ 0x0
   163   000080                     	ds	5
   164   000085                     _main$169:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x5
   168   000085                     	ds	2
   169   000087                     main@count:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x7
   173   000087                     	ds	2
   174                           
   175                           	psect	cstackCOMRAM
   176   000041                     __pcstackCOMRAM:
   177                           	callstack 0
   178   000041                     ?_GetString:
   179                           	callstack 0
   180   000041                     ?_strlen:
   181                           	callstack 0
   182   000041                     ?i2___awmod:
   183                           	callstack 0
   184   000041                     i2UART_Write@data:
   185                           	callstack 0
   186   000041                     ClearBuffer@i:
   187                           	callstack 0
   188   000041                     strlen@s:
   189                           	callstack 0
   190   000041                     i2___awmod@dividend:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x0
   194   000041                     	ds	1
   195   000042                     UART_Write_Text@text:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x1
   199   000042                     	ds	1
   200   000043                     strlen@a:
   201                           	callstack 0
   202   000043                     i2___awmod@divisor:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x2
   206   000043                     	ds	1
   207   000044                     UART_Write_Text@i:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x3
   211   000044                     	ds	1
   212   000045                     i2___awmod@counter:
   213                           	callstack 0
   214   000045                     strcpy@dest:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x4
   218   000045                     	ds	1
   219   000046                     i2___awmod@sign:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x5
   223   000046                     	ds	1
   224   000047                     strcpy@src:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x6
   228   000047                     	ds	2
   229   000049                     ??_strcpy:
   230                           
   231                           ; 1 bytes @ 0x8
   232   000049                     	ds	2
   233   00004B                     strcpy@s:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xA
   237   00004B                     	ds	2
   238   00004D                     strcpy@d:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xC
   242   00004D                     	ds	2
   243   00004F                     strcat@dest:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0xE
   247   00004F                     	ds	2
   248   000051                     strcat@src:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x10
   252   000051                     	ds	2
   253   000053                     ??_Hi_ISR:
   254                           
   255                           ; 1 bytes @ 0x12
   256   000053                     	ds	8
   257   00005B                     ?___awmod:
   258                           	callstack 0
   259   00005B                     UART_Write@data:
   260                           	callstack 0
   261   00005B                     ___awmod@dividend:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x1A
   265   00005B                     	ds	2
   266   00005D                     ___awmod@divisor:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x1C
   270   00005D                     	ds	2
   271   00005F                     ___awmod@counter:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x1E
   275   00005F                     	ds	1
   276   000060                     ___awmod@sign:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x1F
   280   000060                     	ds	1
   281   000061                     
   282                           ; 1 bytes @ 0x20
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 16 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;  count           2    7[BANK0 ] int 
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   302 ;;      Params:         0       0       0       0       0       0       0
   303 ;;      Locals:         0       4       0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0
   305 ;;      Totals:         0       4       0       0       0       0       0
   306 ;;Total ram usage:        4 bytes
   307 ;; Hardware stack levels required when called: 8
   308 ;; This function calls:
   309 ;;		_SYSTEM_Initialize
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text0
   316   000880                     __ptext0:
   317                           	callstack 0
   318   000880                     _main:
   319                           	callstack 23
   320   000880                     
   321                           ;main.c: 19:     SYSTEM_Initialize() ;
   322   000880  EC94  F005         	call	_SYSTEM_Initialize	;wreg free
   323   000884                     
   324                           ;main.c: 20:     TRISA = 0;
   325   000884  0E00               	movlw	0
   326   000886  6E92               	movwf	146,c	;volatile
   327   000888                     
   328                           ;main.c: 21:     LATA = 0;
   329   000888  0E00               	movlw	0
   330   00088A  6E89               	movwf	137,c	;volatile
   331   00088C                     
   332                           ;main.c: 22:     lightmode = 0;
   333   00088C  0E00               	movlw	0
   334   00088E  6E04               	movwf	(_lightmode+1)^0,c
   335   000890  0E00               	movlw	0
   336   000892  6E03               	movwf	_lightmode^0,c
   337   000894                     
   338                           ;main.c: 24:     PR2 = 244;
   339   000894  0EF4               	movlw	244
   340   000896  6ECB               	movwf	203,c	;volatile
   341   000898                     
   342                           ;main.c: 26:     PIR1bits.TMR2IF = 0;
   343   000898  929E               	bcf	158,1,c	;volatile
   344   00089A                     
   345                           ;main.c: 27:     T2CON = 0xFF;
   346   00089A  68CA               	setf	202,c	;volatile
   347   00089C                     
   348                           ;main.c: 28:     int count = 20;
   349   00089C  0E00               	movlw	0
   350   00089E  0100               	movlb	0	; () banked
   351   0008A0  6F88               	movwf	(main@count+1)& (0+255),b
   352   0008A2  0E14               	movlw	20
   353   0008A4  6F87               	movwf	main@count& (0+255),b
   354   0008A6                     
   355                           ; BSR set to: 0
   356                           ;main.c: 29:     LATA = 1;
   357   0008A6  0E01               	movlw	1
   358   0008A8  6E89               	movwf	137,c	;volatile
   359   0008AA                     l1501:
   360                           
   361                           ;main.c: 31:         if (PIR1bits.TMR2IF) {
   362   0008AA  A29E               	btfss	158,1,c	;volatile
   363   0008AC  EF5A  F004         	goto	u681
   364   0008B0  EF5C  F004         	goto	u680
   365   0008B4                     u681:
   366   0008B4  EF55  F004         	goto	l1501
   367   0008B8                     u680:
   368   0008B8                     
   369                           ;main.c: 32:             count--;
   370   0008B8  0100               	movlb	0	; () banked
   371   0008BA  0787               	decf	main@count& (0+255),f,b
   372   0008BC  A0D8               	btfss	status,0,c
   373   0008BE  0788               	decf	(main@count+1)& (0+255),f,b
   374   0008C0                     
   375                           ; BSR set to: 0
   376                           ;main.c: 33:             if (!count){
   377   0008C0  5187               	movf	main@count& (0+255),w,b
   378   0008C2  1188               	iorwf	(main@count+1)& (0+255),w,b
   379   0008C4  A4D8               	btfss	status,2,c
   380   0008C6  EF67  F004         	goto	u691
   381   0008CA  EF69  F004         	goto	u690
   382   0008CE                     u691:
   383   0008CE  EF82  F004         	goto	l1515
   384   0008D2                     u690:
   385   0008D2                     
   386                           ; BSR set to: 0
   387                           ;main.c: 34:                 LATA = LATA == 2 ? 1 : 2;
   388   0008D2  0E02               	movlw	2
   389   0008D4  1889               	xorwf	137,w,c	;volatile
   390   0008D6  B4D8               	btfsc	status,2,c
   391   0008D8  EF70  F004         	goto	u701
   392   0008DC  EF72  F004         	goto	u700
   393   0008E0                     u701:
   394   0008E0  EF78  F004         	goto	l1511
   395   0008E4                     u700:
   396   0008E4                     
   397                           ; BSR set to: 0
   398   0008E4  0E00               	movlw	0
   399   0008E6  6F86               	movwf	(_main$169+1)& (0+255),b
   400   0008E8  0E02               	movlw	2
   401   0008EA  6F85               	movwf	_main$169& (0+255),b
   402   0008EC  EF7C  F004         	goto	l1513
   403   0008F0                     l1511:
   404                           
   405                           ; BSR set to: 0
   406   0008F0  0E00               	movlw	0
   407   0008F2  6F86               	movwf	(_main$169+1)& (0+255),b
   408   0008F4  0E01               	movlw	1
   409   0008F6  6F85               	movwf	_main$169& (0+255),b
   410   0008F8                     l1513:
   411                           
   412                           ; BSR set to: 0
   413   0008F8  C085  FF89         	movff	_main$169,3977	;volatile
   414                           
   415                           ;main.c: 35:                 count = 20;
   416   0008FC  0E00               	movlw	0
   417   0008FE  6F88               	movwf	(main@count+1)& (0+255),b
   418   000900  0E14               	movlw	20
   419   000902  6F87               	movwf	main@count& (0+255),b
   420   000904                     l1515:
   421                           
   422                           ; BSR set to: 0
   423                           ;main.c: 37:             PIR1bits.TMR2IF = 0;
   424   000904  929E               	bcf	158,1,c	;volatile
   425   000906  EF55  F004         	goto	l1501
   426   00090A  EF36  F000         	goto	start
   427   00090E                     __end_of_main:
   428                           	callstack 0
   429                           
   430 ;; *************** function _SYSTEM_Initialize *****************
   431 ;; Defined at:
   432 ;;		line 60 in file "setting_hardaware/setting.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   446 ;;      Params:         0       0       0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0       0       0
   449 ;;      Totals:         0       0       0       0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 7
   453 ;; This function calls:
   454 ;;		_ADC_Initialize
   455 ;;		_CCP1_Initialize
   456 ;;		_INTERRUPT_Initialize
   457 ;;		_OSCILLATOR_Initialize
   458 ;;		_UART_Initialize
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text1
   465   000B28                     __ptext1:
   466                           	callstack 0
   467   000B28                     _SYSTEM_Initialize:
   468                           	callstack 23
   469   000B28                     
   470                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   471   000B28  ECCB  F005         	call	_OSCILLATOR_Initialize	;wreg free
   472                           
   473                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   474   000B2C  ECCF  F005         	call	_INTERRUPT_Initialize	;wreg free
   475   000B30                     
   476                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   477   000B30  EC76  F005         	call	_UART_Initialize	;wreg free
   478   000B34                     
   479                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
   480   000B34  ECC0  F005         	call	_CCP1_Initialize	;wreg free
   481   000B38                     
   482                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   483   000B38  EC9F  F005         	call	_ADC_Initialize	;wreg free
   484   000B3C  0012               	return		;funcret
   485   000B3E                     __end_of_SYSTEM_Initialize:
   486                           	callstack 0
   487                           
   488 ;; *************** function _UART_Initialize *****************
   489 ;; Defined at:
   490 ;;		line 8 in file "setting_hardaware/uart.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 6
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_SYSTEM_Initialize
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text2
   519   000AEC                     __ptext2:
   520                           	callstack 0
   521   000AEC                     _UART_Initialize:
   522                           	callstack 23
   523   000AEC                     
   524                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
   525   000AEC  8C94               	bsf	148,6,c	;volatile
   526                           
   527                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
   528   000AEE  8E94               	bsf	148,7,c	;volatile
   529                           
   530                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
   531   000AF0  98AC               	bcf	172,4,c	;volatile
   532                           
   533                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0;
   534   000AF2  96B8               	bcf	184,3,c	;volatile
   535                           
   536                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 0;
   537   000AF4  94AC               	bcf	172,2,c	;volatile
   538   000AF6                     
   539                           ;setting_hardaware/uart.c: 25:     SPBRG = 51;
   540   000AF6  0E33               	movlw	51
   541   000AF8  6EAF               	movwf	175,c	;volatile
   542   000AFA                     
   543                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
   544   000AFA  8EAB               	bsf	171,7,c	;volatile
   545   000AFC                     
   546                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 0;
   547   000AFC  989E               	bcf	158,4,c	;volatile
   548   000AFE                     
   549                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 1;
   550   000AFE  8A9E               	bsf	158,5,c	;volatile
   551   000B00                     
   552                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
   553   000B00  8AAC               	bsf	172,5,c	;volatile
   554   000B02                     
   555                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
   556   000B02  88AB               	bsf	171,4,c	;volatile
   557   000B04                     
   558                           ;setting_hardaware/uart.c: 33:     PIE1bits.TXIE = 0;
   559   000B04  989D               	bcf	157,4,c	;volatile
   560   000B06                     
   561                           ;setting_hardaware/uart.c: 34:     IPR1bits.TXIP = 1;
   562   000B06  889F               	bsf	159,4,c	;volatile
   563   000B08                     
   564                           ;setting_hardaware/uart.c: 35:     PIE1bits.RCIE = 1;
   565   000B08  8A9D               	bsf	157,5,c	;volatile
   566   000B0A                     
   567                           ;setting_hardaware/uart.c: 36:     IPR1bits.RCIP = 1;
   568   000B0A  8A9F               	bsf	159,5,c	;volatile
   569   000B0C  0012               	return		;funcret
   570   000B0E                     __end_of_UART_Initialize:
   571                           	callstack 0
   572                           
   573 ;; *************** function _OSCILLATOR_Initialize *****************
   574 ;; Defined at:
   575 ;;		line 73 in file "setting_hardaware/setting.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		None
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   589 ;;      Params:         0       0       0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 6
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_SYSTEM_Initialize
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text3
   604   000B96                     __ptext3:
   605                           	callstack 0
   606   000B96                     _OSCILLATOR_Initialize:
   607                           	callstack 23
   608   000B96                     
   609                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
   610   000B96  8CD3               	bsf	4051,6,c	;volatile
   611                           
   612                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
   613   000B98  8AD3               	bsf	4051,5,c	;volatile
   614                           
   615                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
   616   000B9A  98D3               	bcf	4051,4,c	;volatile
   617   000B9C  0012               	return		;funcret
   618   000B9E                     __end_of_OSCILLATOR_Initialize:
   619                           	callstack 0
   620                           
   621 ;; *************** function _INTERRUPT_Initialize *****************
   622 ;; Defined at:
   623 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		None
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   637 ;;      Params:         0       0       0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 6
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_SYSTEM_Initialize
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text4
   652   000B9E                     __ptext4:
   653                           	callstack 0
   654   000B9E                     _INTERRUPT_Initialize:
   655                           	callstack 23
   656   000B9E                     
   657                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   658   000B9E  8ED0               	bsf	208,7,c	;volatile
   659                           
   660                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   661   000BA0  8EF2               	bsf	242,7,c	;volatile
   662                           
   663                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   664   000BA2  8CF2               	bsf	242,6,c	;volatile
   665   000BA4  0012               	return		;funcret
   666   000BA6                     __end_of_INTERRUPT_Initialize:
   667                           	callstack 0
   668                           
   669 ;; *************** function _CCP1_Initialize *****************
   670 ;; Defined at:
   671 ;;		line 3 in file "setting_hardaware/ccp1.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         0       0       0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 6
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_SYSTEM_Initialize
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text5
   700   000B80                     __ptext5:
   701                           	callstack 0
   702   000B80                     _CCP1_Initialize:
   703                           	callstack 23
   704   000B80                     
   705                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
   706   000B80  9494               	bcf	148,2,c	;volatile
   707   000B82                     
   708                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
   709   000B82  0E09               	movlw	9
   710   000B84  6EBD               	movwf	189,c	;volatile
   711   000B86                     
   712                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
   713   000B86  949E               	bcf	158,2,c	;volatile
   714   000B88                     
   715                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
   716   000B88  849F               	bsf	159,2,c	;volatile
   717   000B8A  0012               	return		;funcret
   718   000B8C                     __end_of_CCP1_Initialize:
   719                           	callstack 0
   720                           
   721 ;; *************** function _ADC_Initialize *****************
   722 ;; Defined at:
   723 ;;		line 3 in file "setting_hardaware/adc.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   737 ;;      Params:         0       0       0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 6
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_SYSTEM_Initialize
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text6
   752   000B3E                     __ptext6:
   753                           	callstack 0
   754   000B3E                     _ADC_Initialize:
   755                           	callstack 23
   756   000B3E                     
   757                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
   758   000B3E  6892               	setf	146,c	;volatile
   759   000B40                     
   760                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
   761   000B40  0E0E               	movlw	14
   762   000B42  6EC1               	movwf	193,c	;volatile
   763   000B44                     
   764                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
   765   000B44  8EC0               	bsf	4032,7,c	;volatile
   766                           
   767                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
   768   000B46  0E07               	movlw	7
   769   000B48  12C0               	iorwf	192,f,c	;volatile
   770                           
   771                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
   772   000B4A  0E00               	movlw	0
   773   000B4C  6EC4               	movwf	196,c	;volatile
   774                           
   775                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
   776   000B4E  0E00               	movlw	0
   777   000B50  6EC3               	movwf	195,c	;volatile
   778   000B52  0012               	return		;funcret
   779   000B54                     __end_of_ADC_Initialize:
   780                           	callstack 0
   781                           
   782 ;; *************** function _Lo_ISR *****************
   783 ;; Defined at:
   784 ;;		line 77 in file "setting_hardaware/uart.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   798 ;;      Params:         0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0
   800 ;;      Temps:          0       5       0       0       0       0       0
   801 ;;      Totals:         0       5       0       0       0       0       0
   802 ;;Total ram usage:        5 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 5
   805 ;; This function calls:
   806 ;;		_MyusartRead
   807 ;; This function is called by:
   808 ;;		Interrupt level 1
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	intcodelo
   813   000018                     __pintcodelo:
   814                           	callstack 0
   815   000018                     _Lo_ISR:
   816                           	callstack 23
   817                           
   818                           ;incstack = 0
   819   000018  8061               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   820   00001A  CFD8 F080          	movff	status,??_Lo_ISR
   821   00001E  CFE8 F081          	movff	wreg,??_Lo_ISR+1
   822   000022  CFE0 F082          	movff	bsr,??_Lo_ISR+2
   823   000026  CFD9 F083          	movff	fsr2l,??_Lo_ISR+3
   824   00002A  CFDA F084          	movff	fsr2h,??_Lo_ISR+4
   825   00002E                     
   826                           ;setting_hardaware/uart.c: 79:     if(RCIF)
   827   00002E  AA9E               	btfss	3998,5,c	;volatile
   828   000030  EF1C  F000         	goto	i1u71_21
   829   000034  EF1E  F000         	goto	i1u71_20
   830   000038                     i1u71_21:
   831   000038  EF2A  F000         	goto	i1l196
   832   00003C                     i1u71_20:
   833   00003C                     
   834                           ;setting_hardaware/uart.c: 80:     {;setting_hardaware/uart.c: 81:         if(RCSTAbits.
      +                          OERR)
   835   00003C  A2AB               	btfss	171,1,c	;volatile
   836   00003E  EF23  F000         	goto	i1u72_21
   837   000042  EF25  F000         	goto	i1u72_20
   838   000046                     i1u72_21:
   839   000046  EF28  F000         	goto	i1l1523
   840   00004A                     i1u72_20:
   841   00004A                     
   842                           ;setting_hardaware/uart.c: 82:         {;setting_hardaware/uart.c: 83:             CREN 
      +                          = 0;
   843   00004A  98AB               	bcf	4011,4,c	;volatile
   844                           
   845                           ;setting_hardaware/uart.c: 84:             __nop();
   846   00004C  F000               	nop	
   847                           
   848                           ;setting_hardaware/uart.c: 85:             CREN = 1;
   849   00004E  88AB               	bsf	4011,4,c	;volatile
   850   000050                     i1l1523:
   851                           
   852                           ;setting_hardaware/uart.c: 88:         MyusartRead();
   853   000050  ECB5  F004         	call	_MyusartRead	;wreg free
   854   000054                     i1l196:
   855   000054  C084  FFDA         	movff	??_Lo_ISR+4,fsr2h
   856   000058  C083  FFD9         	movff	??_Lo_ISR+3,fsr2l
   857   00005C  C082  FFE0         	movff	??_Lo_ISR+2,bsr
   858   000060  C081  FFE8         	movff	??_Lo_ISR+1,wreg
   859   000064  C080  FFD8         	movff	??_Lo_ISR,status
   860   000068  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   861   00006A  0010               	retfie	
   862   00006C                     __end_of_Lo_ISR:
   863                           	callstack 0
   864                           
   865 ;; *************** function _MyusartRead *****************
   866 ;; Defined at:
   867 ;;		line 61 in file "setting_hardaware/uart.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   881 ;;      Params:         0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 4
   888 ;; This function calls:
   889 ;;		_UART_Write
   890 ;;		___awmod
   891 ;; This function is called by:
   892 ;;		_Lo_ISR
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text8
   897   00096A                     __ptext8:
   898                           	callstack 0
   899   00096A                     _MyusartRead:
   900                           	callstack 23
   901   00096A                     
   902                           ;setting_hardaware/uart.c: 65:     if (PIR1bits.RCIF) {
   903   00096A  AA9E               	btfss	158,5,c	;volatile
   904   00096C  EFBA  F004         	goto	i1u52_21
   905   000970  EFBC  F004         	goto	i1u52_20
   906   000974                     i1u52_21:
   907   000974  EFDD  F004         	goto	i1l189
   908   000978                     i1u52_20:
   909   000978                     
   910                           ;setting_hardaware/uart.c: 66:         PIR1bits.RCIF = 0;
   911   000978  9A9E               	bcf	158,5,c	;volatile
   912   00097A                     
   913                           ;setting_hardaware/uart.c: 67:         mystring[lenStr++ % 10] = RCREG;
   914   00097A  C001  F05B         	movff	_lenStr,___awmod@dividend
   915   00097E  C002  F05C         	movff	_lenStr+1,___awmod@dividend+1
   916   000982  0E00               	movlw	0
   917   000984  6E5E               	movwf	(___awmod@divisor+1)^0,c
   918   000986  0E0A               	movlw	10
   919   000988  6E5D               	movwf	___awmod@divisor^0,c
   920   00098A  EC90  F003         	call	___awmod	;wreg free
   921   00098E  0E05               	movlw	low _mystring
   922   000990  245B               	addwf	?___awmod^0,w,c
   923   000992  6ED9               	movwf	fsr2l,c
   924   000994  0E00               	movlw	high _mystring
   925   000996  205C               	addwfc	(?___awmod+1)^0,w,c
   926   000998  6EDA               	movwf	fsr2h,c
   927   00099A  CFAE FFDF          	movff	4014,indf2	;volatile
   928   00099E  4A01               	infsnz	_lenStr^0,f,c
   929   0009A0  2A02               	incf	(_lenStr+1)^0,f,c
   930   0009A2                     
   931                           ;setting_hardaware/uart.c: 68:         if (RCREG == '\r') UART_Write('\n');
   932   0009A2  0E0D               	movlw	13
   933   0009A4  18AE               	xorwf	174,w,c	;volatile
   934   0009A6  A4D8               	btfss	status,2,c
   935   0009A8  EFD8  F004         	goto	i1u53_21
   936   0009AC  EFDA  F004         	goto	i1u53_20
   937   0009B0                     i1u53_21:
   938   0009B0  EFDD  F004         	goto	i1l189
   939   0009B4                     i1u53_20:
   940   0009B4  0E0A               	movlw	10
   941   0009B6  ECAA  F005         	call	_UART_Write
   942   0009BA                     i1l189:
   943   0009BA  0012               	return		;funcret
   944   0009BC                     __end_of_MyusartRead:
   945                           	callstack 0
   946                           
   947 ;; *************** function ___awmod *****************
   948 ;; Defined at:
   949 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  dividend        2   26[COMRAM] int 
   952 ;;  divisor         2   28[COMRAM] int 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  sign            1   31[COMRAM] unsigned char 
   955 ;;  counter         1   30[COMRAM] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  2   26[COMRAM] int 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   965 ;;      Params:         4       0       0       0       0       0       0
   966 ;;      Locals:         2       0       0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0
   968 ;;      Totals:         6       0       0       0       0       0       0
   969 ;;Total ram usage:        6 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 3
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_MyusartRead
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text9
   980   000720                     __ptext9:
   981                           	callstack 0
   982   000720                     ___awmod:
   983                           	callstack 23
   984   000720  0E00               	movlw	0
   985   000722  6E60               	movwf	___awmod@sign^0,c
   986   000724  BE5C               	btfsc	(___awmod@dividend+1)^0,7,c
   987   000726  EF99  F003         	goto	i1u38_20
   988   00072A  EF97  F003         	goto	i1u38_21
   989   00072E                     i1u38_21:
   990   00072E  EF9F  F003         	goto	i1l1231
   991   000732                     i1u38_20:
   992   000732  6C5B               	negf	___awmod@dividend^0,c
   993   000734  1E5C               	comf	(___awmod@dividend+1)^0,f,c
   994   000736  B0D8               	btfsc	status,0,c
   995   000738  2A5C               	incf	(___awmod@dividend+1)^0,f,c
   996   00073A  0E01               	movlw	1
   997   00073C  6E60               	movwf	___awmod@sign^0,c
   998   00073E                     i1l1231:
   999   00073E  BE5E               	btfsc	(___awmod@divisor+1)^0,7,c
  1000   000740  EFA6  F003         	goto	i1u39_20
  1001   000744  EFA4  F003         	goto	i1u39_21
  1002   000748                     i1u39_21:
  1003   000748  EFAA  F003         	goto	i1l1235
  1004   00074C                     i1u39_20:
  1005   00074C  6C5D               	negf	___awmod@divisor^0,c
  1006   00074E  1E5E               	comf	(___awmod@divisor+1)^0,f,c
  1007   000750  B0D8               	btfsc	status,0,c
  1008   000752  2A5E               	incf	(___awmod@divisor+1)^0,f,c
  1009   000754                     i1l1235:
  1010   000754  505D               	movf	___awmod@divisor^0,w,c
  1011   000756  105E               	iorwf	(___awmod@divisor+1)^0,w,c
  1012   000758  B4D8               	btfsc	status,2,c
  1013   00075A  EFB1  F003         	goto	i1u40_21
  1014   00075E  EFB3  F003         	goto	i1u40_20
  1015   000762                     i1u40_21:
  1016   000762  EFD7  F003         	goto	i1l1251
  1017   000766                     i1u40_20:
  1018   000766  0E01               	movlw	1
  1019   000768  6E5F               	movwf	___awmod@counter^0,c
  1020   00076A  EFBB  F003         	goto	i1l1241
  1021   00076E                     i1l1239:
  1022   00076E  90D8               	bcf	status,0,c
  1023   000770  365D               	rlcf	___awmod@divisor^0,f,c
  1024   000772  365E               	rlcf	(___awmod@divisor+1)^0,f,c
  1025   000774  2A5F               	incf	___awmod@counter^0,f,c
  1026   000776                     i1l1241:
  1027   000776  AE5E               	btfss	(___awmod@divisor+1)^0,7,c
  1028   000778  EFC0  F003         	goto	i1u41_21
  1029   00077C  EFC2  F003         	goto	i1u41_20
  1030   000780                     i1u41_21:
  1031   000780  EFB7  F003         	goto	i1l1239
  1032   000784                     i1u41_20:
  1033   000784                     i1l1243:
  1034   000784  505D               	movf	___awmod@divisor^0,w,c
  1035   000786  5C5B               	subwf	___awmod@dividend^0,w,c
  1036   000788  505E               	movf	(___awmod@divisor+1)^0,w,c
  1037   00078A  585C               	subwfb	(___awmod@dividend+1)^0,w,c
  1038   00078C  A0D8               	btfss	status,0,c
  1039   00078E  EFCB  F003         	goto	i1u42_21
  1040   000792  EFCD  F003         	goto	i1u42_20
  1041   000796                     i1u42_21:
  1042   000796  EFD1  F003         	goto	i1l1247
  1043   00079A                     i1u42_20:
  1044   00079A  505D               	movf	___awmod@divisor^0,w,c
  1045   00079C  5E5B               	subwf	___awmod@dividend^0,f,c
  1046   00079E  505E               	movf	(___awmod@divisor+1)^0,w,c
  1047   0007A0  5A5C               	subwfb	(___awmod@dividend+1)^0,f,c
  1048   0007A2                     i1l1247:
  1049   0007A2  90D8               	bcf	status,0,c
  1050   0007A4  325E               	rrcf	(___awmod@divisor+1)^0,f,c
  1051   0007A6  325D               	rrcf	___awmod@divisor^0,f,c
  1052   0007A8  2E5F               	decfsz	___awmod@counter^0,f,c
  1053   0007AA  EFC2  F003         	goto	i1l1243
  1054   0007AE                     i1l1251:
  1055   0007AE  5060               	movf	___awmod@sign^0,w,c
  1056   0007B0  B4D8               	btfsc	status,2,c
  1057   0007B2  EFDD  F003         	goto	i1u43_21
  1058   0007B6  EFDF  F003         	goto	i1u43_20
  1059   0007BA                     i1u43_21:
  1060   0007BA  EFE3  F003         	goto	i1l1255
  1061   0007BE                     i1u43_20:
  1062   0007BE  6C5B               	negf	___awmod@dividend^0,c
  1063   0007C0  1E5C               	comf	(___awmod@dividend+1)^0,f,c
  1064   0007C2  B0D8               	btfsc	status,0,c
  1065   0007C4  2A5C               	incf	(___awmod@dividend+1)^0,f,c
  1066   0007C6                     i1l1255:
  1067   0007C6  C05B  F05B         	movff	___awmod@dividend,?___awmod
  1068   0007CA  C05C  F05C         	movff	___awmod@dividend+1,?___awmod+1
  1069   0007CE  0012               	return		;funcret
  1070   0007D0                     __end_of___awmod:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _UART_Write *****************
  1074 ;; Defined at:
  1075 ;;		line 40 in file "setting_hardaware/uart.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  data            1    wreg     unsigned char 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  data            1   26[COMRAM] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1089 ;;      Params:         0       0       0       0       0       0       0
  1090 ;;      Locals:         1       0       0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0
  1092 ;;      Totals:         1       0       0       0       0       0       0
  1093 ;;Total ram usage:        1 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 3
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_MyusartRead
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text10
  1104   000B54                     __ptext10:
  1105                           	callstack 0
  1106   000B54                     _UART_Write:
  1107                           	callstack 23
  1108                           
  1109                           ;incstack = 0
  1110                           ;UART_Write@data stored from wreg
  1111   000B54  6E5B               	movwf	UART_Write@data^0,c
  1112   000B56                     i1l167:
  1113   000B56  A2AC               	btfss	172,1,c	;volatile
  1114   000B58  EFB0  F005         	goto	i1u3_21
  1115   000B5C  EFB2  F005         	goto	i1u3_20
  1116   000B60                     i1u3_21:
  1117   000B60  EFAB  F005         	goto	i1l167
  1118   000B64                     i1u3_20:
  1119   000B64                     
  1120                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  1121   000B64  C05B  FFAD         	movff	UART_Write@data,4013	;volatile
  1122   000B68  0012               	return		;funcret
  1123   000B6A                     __end_of_UART_Write:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _Hi_ISR *****************
  1127 ;; Defined at:
  1128 ;;		line 45 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         0       0       0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0
  1144 ;;      Temps:          8       0       0       0       0       0       0
  1145 ;;      Totals:         8       0       0       0       0       0       0
  1146 ;;Total ram usage:        8 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 2
  1149 ;; This function calls:
  1150 ;;		_ClearBuffer
  1151 ;;		_GetString
  1152 ;;		_UART_Write_Text
  1153 ;;		_strcat
  1154 ;;		_strcpy
  1155 ;;		i2_MyusartRead
  1156 ;; This function is called by:
  1157 ;;		Interrupt level 2
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	intcode
  1162   000008                     __pintcode:
  1163                           	callstack 0
  1164   000008                     _Hi_ISR:
  1165                           	callstack 23
  1166                           
  1167                           ;incstack = 0
  1168   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1169   00000A  ED02  F003         	call	int_func,f	;refresh shadow registers
  1170                           
  1171                           	psect	intcode_body
  1172   000604                     __pintcode_body:
  1173                           	callstack 23
  1174   000604                     int_func:
  1175                           	callstack 23
  1176   000604  0006               	pop		; remove dummy address from shadow register refresh
  1177   000606  CFE9 F053          	movff	fsr0l,??_Hi_ISR
  1178   00060A  CFEA F054          	movff	fsr0h,??_Hi_ISR+1
  1179   00060E  CFD9 F055          	movff	fsr2l,??_Hi_ISR+2
  1180   000612  CFDA F056          	movff	fsr2h,??_Hi_ISR+3
  1181   000616  CFF6 F057          	movff	tblptrl,??_Hi_ISR+4
  1182   00061A  CFF7 F058          	movff	tblptrh,??_Hi_ISR+5
  1183   00061E  CFF8 F059          	movff	tblptru,??_Hi_ISR+6
  1184   000622  CFF5 F05A          	movff	tablat,??_Hi_ISR+7
  1185   000626                     
  1186                           ;main.c: 47:     if(RCIF)
  1187   000626  AA9E               	btfss	3998,5,c	;volatile
  1188   000628  EF18  F003         	goto	i2u60_41
  1189   00062C  EF1A  F003         	goto	i2u60_40
  1190   000630                     i2u60_41:
  1191   000630  EF7E  F003         	goto	i2l68
  1192   000634                     i2u60_40:
  1193   000634                     
  1194                           ;main.c: 48:     {;main.c: 49:         if(RCSTAbits.OERR)
  1195   000634  A2AB               	btfss	171,1,c	;volatile
  1196   000636  EF1F  F003         	goto	i2u61_41
  1197   00063A  EF21  F003         	goto	i2u61_40
  1198   00063E                     i2u61_41:
  1199   00063E  EF24  F003         	goto	i2l1401
  1200   000642                     i2u61_40:
  1201   000642                     
  1202                           ;main.c: 50:         {;main.c: 51:             CREN = 0;
  1203   000642  98AB               	bcf	4011,4,c	;volatile
  1204                           
  1205                           ;main.c: 52:             __nop();
  1206   000644  F000               	nop	
  1207                           
  1208                           ;main.c: 53:             CREN = 1;
  1209   000646  88AB               	bsf	4011,4,c	;volatile
  1210   000648                     i2l1401:
  1211                           
  1212                           ;main.c: 56:         MyusartRead();
  1213   000648  ECDE  F004         	call	i2_MyusartRead	;wreg free
  1214   00064C                     
  1215                           ;main.c: 57:         strcpy(str, GetString());
  1216   00064C  0E2D               	movlw	low _str
  1217   00064E  6E45               	movwf	strcpy@dest^0,c
  1218   000650  0E00               	movlw	high _str
  1219   000652  6E46               	movwf	(strcpy@dest+1)^0,c
  1220   000654  ECC6  F005         	call	_GetString	;wreg free
  1221   000658  C041  F047         	movff	?_GetString,strcpy@src
  1222   00065C  C042  F048         	movff	?_GetString+1,strcpy@src+1
  1223   000660  EC87  F004         	call	_strcpy	;wreg free
  1224   000664                     
  1225                           ;main.c: 58:         strcat(state, GetString());
  1226   000664  0E19               	movlw	low _state
  1227   000666  6E4F               	movwf	strcat@dest^0,c
  1228   000668  0E00               	movlw	high _state
  1229   00066A  6E50               	movwf	(strcat@dest+1)^0,c
  1230   00066C  ECC6  F005         	call	_GetString	;wreg free
  1231   000670  C041  F051         	movff	?_GetString,strcat@src
  1232   000674  C042  F052         	movff	?_GetString+1,strcat@src+1
  1233   000678  EC63  F005         	call	_strcat	;wreg free
  1234                           
  1235                           ;main.c: 59:         UART_Write_Text(str);
  1236   00067C  0E2D               	movlw	low _str
  1237   00067E  6E42               	movwf	UART_Write_Text@text^0,c
  1238   000680  0E00               	movlw	high _str
  1239   000682  6E43               	movwf	(UART_Write_Text@text+1)^0,c
  1240   000684  EC28  F005         	call	_UART_Write_Text	;wreg free
  1241                           
  1242                           ;main.c: 60:         ClearBuffer();
  1243   000688  EC07  F005         	call	_ClearBuffer	;wreg free
  1244   00068C                     
  1245                           ;main.c: 61:         if (str[0] == '\r'){
  1246   00068C  0E0D               	movlw	13
  1247   00068E  182D               	xorwf	_str^0,w,c
  1248   000690  A4D8               	btfss	status,2,c
  1249   000692  EF4D  F003         	goto	i2u62_41
  1250   000696  EF4F  F003         	goto	i2u62_40
  1251   00069A                     i2u62_41:
  1252   00069A  EF7E  F003         	goto	i2l68
  1253   00069E                     i2u62_40:
  1254   00069E                     
  1255                           ;main.c: 62:             if (state[0] == '0') {
  1256   00069E  0E30               	movlw	48
  1257   0006A0  1819               	xorwf	_state^0,w,c
  1258   0006A2  A4D8               	btfss	status,2,c
  1259   0006A4  EF56  F003         	goto	i2u63_41
  1260   0006A8  EF58  F003         	goto	i2u63_40
  1261   0006AC                     i2u63_41:
  1262   0006AC  EF5C  F003         	goto	i2l1413
  1263   0006B0                     i2u63_40:
  1264   0006B0                     
  1265                           ;main.c: 63:                 PR2 = 244;
  1266   0006B0  0EF4               	movlw	244
  1267   0006B2  6ECB               	movwf	203,c	;volatile
  1268                           
  1269                           ;main.c: 65:             }
  1270   0006B4  EF74  F003         	goto	i2l1421
  1271   0006B8                     i2l1413:
  1272   0006B8  0E31               	movlw	49
  1273   0006BA  1819               	xorwf	_state^0,w,c
  1274   0006BC  A4D8               	btfss	status,2,c
  1275   0006BE  EF63  F003         	goto	i2u64_41
  1276   0006C2  EF65  F003         	goto	i2u64_40
  1277   0006C6                     i2u64_41:
  1278   0006C6  EF69  F003         	goto	i2l1417
  1279   0006CA                     i2u64_40:
  1280   0006CA                     
  1281                           ;main.c: 68:                 PR2 = 122;
  1282   0006CA  0E7A               	movlw	122
  1283   0006CC  6ECB               	movwf	203,c	;volatile
  1284                           
  1285                           ;main.c: 69:             }
  1286   0006CE  EF74  F003         	goto	i2l1421
  1287   0006D2                     i2l1417:
  1288   0006D2  0E32               	movlw	50
  1289   0006D4  1819               	xorwf	_state^0,w,c
  1290   0006D6  A4D8               	btfss	status,2,c
  1291   0006D8  EF70  F003         	goto	i2u65_41
  1292   0006DC  EF72  F003         	goto	i2u65_40
  1293   0006E0                     i2u65_41:
  1294   0006E0  EF74  F003         	goto	i2l1421
  1295   0006E4                     i2u65_40:
  1296   0006E4                     
  1297                           ;main.c: 72:                 PR2 = 61;
  1298   0006E4  0E3D               	movlw	61
  1299   0006E6  6ECB               	movwf	203,c	;volatile
  1300   0006E8                     i2l1421:
  1301                           
  1302                           ;main.c: 74:             strcpy(state, "");
  1303   0006E8  0E19               	movlw	low _state
  1304   0006EA  6E45               	movwf	strcpy@dest^0,c
  1305   0006EC  0E00               	movlw	high _state
  1306   0006EE  6E46               	movwf	(strcpy@dest+1)^0,c
  1307   0006F0  0E01               	movlw	low STR_1
  1308   0006F2  6E47               	movwf	strcpy@src^0,c
  1309   0006F4  0E06               	movlw	high STR_1
  1310   0006F6  6E48               	movwf	(strcpy@src+1)^0,c
  1311   0006F8  EC87  F004         	call	_strcpy	;wreg free
  1312   0006FC                     i2l68:
  1313   0006FC  C05A  FFF5         	movff	??_Hi_ISR+7,tablat
  1314   000700  C059  FFF8         	movff	??_Hi_ISR+6,tblptru
  1315   000704  C058  FFF7         	movff	??_Hi_ISR+5,tblptrh
  1316   000708  C057  FFF6         	movff	??_Hi_ISR+4,tblptrl
  1317   00070C  C056  FFDA         	movff	??_Hi_ISR+3,fsr2h
  1318   000710  C055  FFD9         	movff	??_Hi_ISR+2,fsr2l
  1319   000714  C054  FFEA         	movff	??_Hi_ISR+1,fsr0h
  1320   000718  C053  FFE9         	movff	??_Hi_ISR,fsr0l
  1321   00071C  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1322   00071E  0011               	retfie		f
  1323   000720                     __end_of_Hi_ISR:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function i2_MyusartRead *****************
  1327 ;; Defined at:
  1328 ;;		line 61 in file "setting_hardaware/uart.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1342 ;;      Params:         0       0       0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 1
  1349 ;; This function calls:
  1350 ;;		i2_UART_Write
  1351 ;;		i2___awmod
  1352 ;; This function is called by:
  1353 ;;		_Hi_ISR
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text12
  1358   0009BC                     __ptext12:
  1359                           	callstack 0
  1360   0009BC                     i2_MyusartRead:
  1361                           	callstack 23
  1362   0009BC                     
  1363                           ;setting_hardaware/uart.c: 65:     if (PIR1bits.RCIF) {
  1364   0009BC  AA9E               	btfss	158,5,c	;volatile
  1365   0009BE  EFE3  F004         	goto	i2u55_41
  1366   0009C2  EFE5  F004         	goto	i2u55_40
  1367   0009C6                     i2u55_41:
  1368   0009C6  EF06  F005         	goto	i2l189
  1369   0009CA                     i2u55_40:
  1370   0009CA                     
  1371                           ;setting_hardaware/uart.c: 66:         PIR1bits.RCIF = 0;
  1372   0009CA  9A9E               	bcf	158,5,c	;volatile
  1373   0009CC                     
  1374                           ;setting_hardaware/uart.c: 67:         mystring[lenStr++ % 10] = RCREG;
  1375   0009CC  C001  F041         	movff	_lenStr,i2___awmod@dividend
  1376   0009D0  C002  F042         	movff	_lenStr+1,i2___awmod@dividend+1
  1377   0009D4  0E00               	movlw	0
  1378   0009D6  6E44               	movwf	(i2___awmod@divisor+1)^0,c
  1379   0009D8  0E0A               	movlw	10
  1380   0009DA  6E43               	movwf	i2___awmod@divisor^0,c
  1381   0009DC  ECE8  F003         	call	i2___awmod	;wreg free
  1382   0009E0  0E05               	movlw	low _mystring
  1383   0009E2  2441               	addwf	?i2___awmod^0,w,c
  1384   0009E4  6ED9               	movwf	fsr2l,c
  1385   0009E6  0E00               	movlw	high _mystring
  1386   0009E8  2042               	addwfc	(?i2___awmod+1)^0,w,c
  1387   0009EA  6EDA               	movwf	fsr2h,c
  1388   0009EC  CFAE FFDF          	movff	4014,indf2	;volatile
  1389   0009F0  4A01               	infsnz	_lenStr^0,f,c
  1390   0009F2  2A02               	incf	(_lenStr+1)^0,f,c
  1391   0009F4                     
  1392                           ;setting_hardaware/uart.c: 68:         if (RCREG == '\r') UART_Write('\n');
  1393   0009F4  0E0D               	movlw	13
  1394   0009F6  18AE               	xorwf	174,w,c	;volatile
  1395   0009F8  A4D8               	btfss	status,2,c
  1396   0009FA  EF01  F005         	goto	i2u56_41
  1397   0009FE  EF03  F005         	goto	i2u56_40
  1398   000A02                     i2u56_41:
  1399   000A02  EF06  F005         	goto	i2l189
  1400   000A06                     i2u56_40:
  1401   000A06  0E0A               	movlw	10
  1402   000A08  ECB5  F005         	call	i2_UART_Write
  1403   000A0C                     i2l189:
  1404   000A0C  0012               	return		;funcret
  1405   000A0E                     __end_ofi2_MyusartRead:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function i2___awmod *****************
  1409 ;; Defined at:
  1410 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  dividend        2    0[COMRAM] int 
  1413 ;;  divisor         2    2[COMRAM] int 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  sign            1    5[COMRAM] unsigned char 
  1416 ;;  counter         1    4[COMRAM] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2    0[COMRAM] int 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         4       0       0       0       0       0       0
  1427 ;;      Locals:         2       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         6       0       0       0       0       0       0
  1430 ;;Total ram usage:        6 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		i2_MyusartRead
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text13
  1440   0007D0                     __ptext13:
  1441                           	callstack 0
  1442   0007D0                     i2___awmod:
  1443                           	callstack 23
  1444   0007D0  0E00               	movlw	0
  1445   0007D2  6E46               	movwf	i2___awmod@sign^0,c
  1446   0007D4  BE42               	btfsc	(i2___awmod@dividend+1)^0,7,c
  1447   0007D6  EFF1  F003         	goto	i2u46_40
  1448   0007DA  EFEF  F003         	goto	i2u46_41
  1449   0007DE                     i2u46_41:
  1450   0007DE  EFF7  F003         	goto	i2l1281
  1451   0007E2                     i2u46_40:
  1452   0007E2  6C41               	negf	i2___awmod@dividend^0,c
  1453   0007E4  1E42               	comf	(i2___awmod@dividend+1)^0,f,c
  1454   0007E6  B0D8               	btfsc	status,0,c
  1455   0007E8  2A42               	incf	(i2___awmod@dividend+1)^0,f,c
  1456   0007EA  0E01               	movlw	1
  1457   0007EC  6E46               	movwf	i2___awmod@sign^0,c
  1458   0007EE                     i2l1281:
  1459   0007EE  BE44               	btfsc	(i2___awmod@divisor+1)^0,7,c
  1460   0007F0  EFFE  F003         	goto	i2u47_40
  1461   0007F4  EFFC  F003         	goto	i2u47_41
  1462   0007F8                     i2u47_41:
  1463   0007F8  EF02  F004         	goto	i2l1285
  1464   0007FC                     i2u47_40:
  1465   0007FC  6C43               	negf	i2___awmod@divisor^0,c
  1466   0007FE  1E44               	comf	(i2___awmod@divisor+1)^0,f,c
  1467   000800  B0D8               	btfsc	status,0,c
  1468   000802  2A44               	incf	(i2___awmod@divisor+1)^0,f,c
  1469   000804                     i2l1285:
  1470   000804  5043               	movf	i2___awmod@divisor^0,w,c
  1471   000806  1044               	iorwf	(i2___awmod@divisor+1)^0,w,c
  1472   000808  B4D8               	btfsc	status,2,c
  1473   00080A  EF09  F004         	goto	i2u48_41
  1474   00080E  EF0B  F004         	goto	i2u48_40
  1475   000812                     i2u48_41:
  1476   000812  EF2F  F004         	goto	i2l1301
  1477   000816                     i2u48_40:
  1478   000816  0E01               	movlw	1
  1479   000818  6E45               	movwf	i2___awmod@counter^0,c
  1480   00081A  EF13  F004         	goto	i2l1291
  1481   00081E                     i2l1289:
  1482   00081E  90D8               	bcf	status,0,c
  1483   000820  3643               	rlcf	i2___awmod@divisor^0,f,c
  1484   000822  3644               	rlcf	(i2___awmod@divisor+1)^0,f,c
  1485   000824  2A45               	incf	i2___awmod@counter^0,f,c
  1486   000826                     i2l1291:
  1487   000826  AE44               	btfss	(i2___awmod@divisor+1)^0,7,c
  1488   000828  EF18  F004         	goto	i2u49_41
  1489   00082C  EF1A  F004         	goto	i2u49_40
  1490   000830                     i2u49_41:
  1491   000830  EF0F  F004         	goto	i2l1289
  1492   000834                     i2u49_40:
  1493   000834                     i2l1293:
  1494   000834  5043               	movf	i2___awmod@divisor^0,w,c
  1495   000836  5C41               	subwf	i2___awmod@dividend^0,w,c
  1496   000838  5044               	movf	(i2___awmod@divisor+1)^0,w,c
  1497   00083A  5842               	subwfb	(i2___awmod@dividend+1)^0,w,c
  1498   00083C  A0D8               	btfss	status,0,c
  1499   00083E  EF23  F004         	goto	i2u50_41
  1500   000842  EF25  F004         	goto	i2u50_40
  1501   000846                     i2u50_41:
  1502   000846  EF29  F004         	goto	i2l1297
  1503   00084A                     i2u50_40:
  1504   00084A  5043               	movf	i2___awmod@divisor^0,w,c
  1505   00084C  5E41               	subwf	i2___awmod@dividend^0,f,c
  1506   00084E  5044               	movf	(i2___awmod@divisor+1)^0,w,c
  1507   000850  5A42               	subwfb	(i2___awmod@dividend+1)^0,f,c
  1508   000852                     i2l1297:
  1509   000852  90D8               	bcf	status,0,c
  1510   000854  3244               	rrcf	(i2___awmod@divisor+1)^0,f,c
  1511   000856  3243               	rrcf	i2___awmod@divisor^0,f,c
  1512   000858  2E45               	decfsz	i2___awmod@counter^0,f,c
  1513   00085A  EF1A  F004         	goto	i2l1293
  1514   00085E                     i2l1301:
  1515   00085E  5046               	movf	i2___awmod@sign^0,w,c
  1516   000860  B4D8               	btfsc	status,2,c
  1517   000862  EF35  F004         	goto	i2u51_41
  1518   000866  EF37  F004         	goto	i2u51_40
  1519   00086A                     i2u51_41:
  1520   00086A  EF3B  F004         	goto	i2l1305
  1521   00086E                     i2u51_40:
  1522   00086E  6C41               	negf	i2___awmod@dividend^0,c
  1523   000870  1E42               	comf	(i2___awmod@dividend+1)^0,f,c
  1524   000872  B0D8               	btfsc	status,0,c
  1525   000874  2A42               	incf	(i2___awmod@dividend+1)^0,f,c
  1526   000876                     i2l1305:
  1527   000876  C041  F041         	movff	i2___awmod@dividend,?i2___awmod
  1528   00087A  C042  F042         	movff	i2___awmod@dividend+1,?i2___awmod+1
  1529   00087E  0012               	return		;funcret
  1530   000880                     __end_ofi2___awmod:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _strcat *****************
  1534 ;; Defined at:
  1535 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcat.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  dest            2   14[COMRAM] PTR unsigned char 
  1538 ;;		 -> state(20), 
  1539 ;;  src             2   16[COMRAM] PTR const unsigned char 
  1540 ;;		 -> mystring(20), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2   14[COMRAM] PTR unsigned char 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1552 ;;      Params:         4       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0
  1555 ;;      Totals:         4       0       0       0       0       0       0
  1556 ;;Total ram usage:        4 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 1
  1559 ;; This function calls:
  1560 ;;		_strcpy
  1561 ;;		_strlen
  1562 ;; This function is called by:
  1563 ;;		_Hi_ISR
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text14
  1568   000AC6                     __ptext14:
  1569                           	callstack 0
  1570   000AC6                     _strcat:
  1571                           	callstack 23
  1572   000AC6  C04F  F041         	movff	strcat@dest,strlen@s
  1573   000ACA  C050  F042         	movff	strcat@dest+1,strlen@s+1
  1574   000ACE  EC48  F005         	call	_strlen	;wreg free
  1575   000AD2  5041               	movf	?_strlen^0,w,c
  1576   000AD4  244F               	addwf	strcat@dest^0,w,c
  1577   000AD6  6E45               	movwf	strcpy@dest^0,c
  1578   000AD8  5042               	movf	(?_strlen+1)^0,w,c
  1579   000ADA  2050               	addwfc	(strcat@dest+1)^0,w,c
  1580   000ADC  6E46               	movwf	(strcpy@dest+1)^0,c
  1581   000ADE  C051  F047         	movff	strcat@src,strcpy@src
  1582   000AE2  C052  F048         	movff	strcat@src+1,strcpy@src+1
  1583   000AE6  EC87  F004         	call	_strcpy	;wreg free
  1584   000AEA  0012               	return		;funcret
  1585   000AEC                     __end_of_strcat:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _strlen *****************
  1589 ;; Defined at:
  1590 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1593 ;;		 -> state(20), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1596 ;;		 -> state(20), 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2    0[COMRAM] unsigned int 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1606 ;;      Params:         2       0       0       0       0       0       0
  1607 ;;      Locals:         2       0       0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0
  1609 ;;      Totals:         4       0       0       0       0       0       0
  1610 ;;Total ram usage:        4 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_strcat
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text15
  1620   000A90                     __ptext15:
  1621                           	callstack 0
  1622   000A90                     _strlen:
  1623                           	callstack 23
  1624   000A90  C041  F043         	movff	strlen@s,strlen@a
  1625   000A94  C042  F044         	movff	strlen@s+1,strlen@a+1
  1626   000A98  EF50  F005         	goto	i2l1263
  1627   000A9C                     i2l1261:
  1628   000A9C  4A41               	infsnz	strlen@s^0,f,c
  1629   000A9E  2A42               	incf	(strlen@s+1)^0,f,c
  1630   000AA0                     i2l1263:
  1631   000AA0  C041  FFD9         	movff	strlen@s,fsr2l
  1632   000AA4  C042  FFDA         	movff	strlen@s+1,fsr2h
  1633   000AA8  50DF               	movf	indf2,w,c
  1634   000AAA  A4D8               	btfss	status,2,c
  1635   000AAC  EF5A  F005         	goto	i2u44_41
  1636   000AB0  EF5C  F005         	goto	i2u44_40
  1637   000AB4                     i2u44_41:
  1638   000AB4  EF4E  F005         	goto	i2l1261
  1639   000AB8                     i2u44_40:
  1640   000AB8  5043               	movf	strlen@a^0,w,c
  1641   000ABA  5C41               	subwf	strlen@s^0,w,c
  1642   000ABC  6E41               	movwf	?_strlen^0,c
  1643   000ABE  5044               	movf	(strlen@a+1)^0,w,c
  1644   000AC0  5842               	subwfb	(strlen@s+1)^0,w,c
  1645   000AC2  6E42               	movwf	(?_strlen+1)^0,c
  1646   000AC4  0012               	return		;funcret
  1647   000AC6                     __end_of_strlen:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _strcpy *****************
  1651 ;; Defined at:
  1652 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  dest            2    4[COMRAM] PTR unsigned char 
  1655 ;;		 -> state(20), str(20), 
  1656 ;;  src             2    6[COMRAM] PTR const unsigned char 
  1657 ;;		 -> mystring(20), STR_1(1), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  d               2   12[COMRAM] PTR unsigned char 
  1660 ;;		 -> state(20), str(20), 
  1661 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1662 ;;		 -> mystring(20), STR_1(1), 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    4[COMRAM] PTR unsigned char 
  1665 ;; Registers used:
  1666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1672 ;;      Params:         4       0       0       0       0       0       0
  1673 ;;      Locals:         4       0       0       0       0       0       0
  1674 ;;      Temps:          2       0       0       0       0       0       0
  1675 ;;      Totals:        10       0       0       0       0       0       0
  1676 ;;Total ram usage:       10 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_Hi_ISR
  1682 ;;		_strcat
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text16
  1687   00090E                     __ptext16:
  1688                           	callstack 0
  1689   00090E                     _strcpy:
  1690                           	callstack 24
  1691   00090E  C047  F04B         	movff	strcpy@src,strcpy@s
  1692   000912  C048  F04C         	movff	strcpy@src+1,strcpy@s+1
  1693   000916  C045  F04D         	movff	strcpy@dest,strcpy@d
  1694   00091A  C046  F04E         	movff	strcpy@dest+1,strcpy@d+1
  1695   00091E                     i2l1181:
  1696   00091E  504B               	movf	strcpy@s^0,w,c
  1697   000920  6E49               	movwf	??_strcpy^0,c
  1698   000922  504C               	movf	(strcpy@s+1)^0,w,c
  1699   000924  6E4A               	movwf	(??_strcpy+1)^0,c
  1700   000926  4A4B               	infsnz	strcpy@s^0,f,c
  1701   000928  2A4C               	incf	(strcpy@s+1)^0,f,c
  1702   00092A  C049  FFF6         	movff	??_strcpy,tblptrl
  1703   00092E  C04A  FFF7         	movff	??_strcpy+1,tblptrh
  1704   000932  6AF8               	clrf	tblptru,c
  1705   000934  C04D  FFD9         	movff	strcpy@d,fsr2l
  1706   000938  C04E  FFDA         	movff	strcpy@d+1,fsr2h
  1707   00093C  4A4D               	infsnz	strcpy@d^0,f,c
  1708   00093E  2A4E               	incf	(strcpy@d+1)^0,f,c
  1709   000940  0E05               	movlw	(high __ramtop+-1)
  1710   000942  64F7               	cpfsgt	tblptrh,c
  1711   000944  D003               	bra	i2u36_47
  1712   000946  0008               	tblrd		*
  1713   000948  50F5               	movf	tablat,w,c
  1714   00094A  D005               	bra	i2u36_40
  1715   00094C                     i2u36_47:
  1716   00094C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1717   000950  CFF7 FFEA          	movff	tblptrh,fsr0h
  1718   000954  50EF               	movf	indf0,w,c
  1719   000956                     i2u36_40:
  1720   000956  6EDF               	movwf	indf2,c
  1721   000958  50DF               	movf	indf2,w,c
  1722   00095A  A4D8               	btfss	status,2,c
  1723   00095C  EFB2  F004         	goto	i2u37_41
  1724   000960  EFB4  F004         	goto	i2u37_40
  1725   000964                     i2u37_41:
  1726   000964  EF8F  F004         	goto	i2l1181
  1727   000968                     i2u37_40:
  1728   000968  0012               	return		;funcret
  1729   00096A                     __end_of_strcpy:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _UART_Write_Text *****************
  1733 ;; Defined at:
  1734 ;;		line 50 in file "setting_hardaware/uart.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  text            2    1[COMRAM] PTR unsigned char 
  1737 ;;		 -> str(20), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  i               2    3[COMRAM] int 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         2       0       0       0       0       0       0
  1750 ;;      Locals:         2       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         4       0       0       0       0       0       0
  1753 ;;Total ram usage:        4 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		i2_UART_Write
  1758 ;; This function is called by:
  1759 ;;		_Hi_ISR
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text17
  1764   000A50                     __ptext17:
  1765                           	callstack 0
  1766   000A50                     _UART_Write_Text:
  1767                           	callstack 23
  1768   000A50                     
  1769                           ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
  1770   000A50  0E00               	movlw	0
  1771   000A52  6E45               	movwf	(UART_Write_Text@i+1)^0,c
  1772   000A54  0E00               	movlw	0
  1773   000A56  6E44               	movwf	UART_Write_Text@i^0,c
  1774   000A58  EF39  F005         	goto	i2l1345
  1775   000A5C                     i2l1341:
  1776                           
  1777                           ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
  1778   000A5C  5044               	movf	UART_Write_Text@i^0,w,c
  1779   000A5E  2442               	addwf	UART_Write_Text@text^0,w,c
  1780   000A60  6ED9               	movwf	fsr2l,c
  1781   000A62  5045               	movf	(UART_Write_Text@i+1)^0,w,c
  1782   000A64  2043               	addwfc	(UART_Write_Text@text+1)^0,w,c
  1783   000A66  6EDA               	movwf	fsr2h,c
  1784   000A68  50DF               	movf	indf2,w,c
  1785   000A6A  ECB5  F005         	call	i2_UART_Write
  1786   000A6E  4A44               	infsnz	UART_Write_Text@i^0,f,c
  1787   000A70  2A45               	incf	(UART_Write_Text@i+1)^0,f,c
  1788   000A72                     i2l1345:
  1789   000A72  5044               	movf	UART_Write_Text@i^0,w,c
  1790   000A74  2442               	addwf	UART_Write_Text@text^0,w,c
  1791   000A76  6ED9               	movwf	fsr2l,c
  1792   000A78  5045               	movf	(UART_Write_Text@i+1)^0,w,c
  1793   000A7A  2043               	addwfc	(UART_Write_Text@text+1)^0,w,c
  1794   000A7C  6EDA               	movwf	fsr2h,c
  1795   000A7E  50DF               	movf	indf2,w,c
  1796   000A80  A4D8               	btfss	status,2,c
  1797   000A82  EF45  F005         	goto	i2u54_41
  1798   000A86  EF47  F005         	goto	i2u54_40
  1799   000A8A                     i2u54_41:
  1800   000A8A  EF2E  F005         	goto	i2l1341
  1801   000A8E                     i2u54_40:
  1802   000A8E  0012               	return		;funcret
  1803   000A90                     __end_of_UART_Write_Text:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function i2_UART_Write *****************
  1807 ;; Defined at:
  1808 ;;		line 40 in file "setting_hardaware/uart.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  data            1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  data            1    0[COMRAM] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1822 ;;      Params:         0       0       0       0       0       0       0
  1823 ;;      Locals:         1       0       0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0
  1825 ;;      Totals:         1       0       0       0       0       0       0
  1826 ;;Total ram usage:        1 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_UART_Write_Text
  1832 ;;		i2_MyusartRead
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text18
  1837   000B6A                     __ptext18:
  1838                           	callstack 0
  1839   000B6A                     i2_UART_Write:
  1840                           	callstack 23
  1841                           
  1842                           ;incstack = 0
  1843                           ;i2UART_Write@data stored from wreg
  1844   000B6A  6E41               	movwf	i2UART_Write@data^0,c
  1845   000B6C                     i2l167:
  1846   000B6C  A2AC               	btfss	172,1,c	;volatile
  1847   000B6E  EFBB  F005         	goto	i2u45_41
  1848   000B72  EFBD  F005         	goto	i2u45_40
  1849   000B76                     i2u45_41:
  1850   000B76  EFB6  F005         	goto	i2l167
  1851   000B7A                     i2u45_40:
  1852   000B7A                     
  1853                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  1854   000B7A  C041  FFAD         	movff	i2UART_Write@data,4013	;volatile
  1855   000B7E  0012               	return		;funcret
  1856   000B80                     __end_ofi2_UART_Write:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _GetString *****************
  1860 ;; Defined at:
  1861 ;;		line 46 in file "setting_hardaware/uart.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2    0[COMRAM] PTR unsigned char 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1875 ;;      Params:         2       0       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0
  1878 ;;      Totals:         2       0       0       0       0       0       0
  1879 ;;Total ram usage:        2 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_Hi_ISR
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text19
  1889   000B8C                     __ptext19:
  1890                           	callstack 0
  1891   000B8C                     _GetString:
  1892                           	callstack 24
  1893   000B8C                     
  1894                           ;setting_hardaware/uart.c: 47:     return mystring;
  1895   000B8C  0E05               	movlw	low _mystring
  1896   000B8E  6E41               	movwf	?_GetString^0,c
  1897   000B90  0E00               	movlw	high _mystring
  1898   000B92  6E42               	movwf	(?_GetString+1)^0,c
  1899   000B94  0012               	return		;funcret
  1900   000B96                     __end_of_GetString:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _ClearBuffer *****************
  1904 ;; Defined at:
  1905 ;;		line 55 in file "setting_hardaware/uart.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  i               2    0[COMRAM] int 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1919 ;;      Params:         0       0       0       0       0       0       0
  1920 ;;      Locals:         2       0       0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0
  1922 ;;      Totals:         2       0       0       0       0       0       0
  1923 ;;Total ram usage:        2 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_Hi_ISR
  1929 ;;		_Mode1
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text20
  1934   000A0E                     __ptext20:
  1935                           	callstack 0
  1936   000A0E                     _ClearBuffer:
  1937                           	callstack 24
  1938   000A0E                     
  1939                           ;setting_hardaware/uart.c: 56:     for(int i = 0; i < 10 ; i++)
  1940   000A0E  0E00               	movlw	0
  1941   000A10  6E42               	movwf	(ClearBuffer@i+1)^0,c
  1942   000A12  0E00               	movlw	0
  1943   000A14  6E41               	movwf	ClearBuffer@i^0,c
  1944   000A16                     i2l1031:
  1945                           
  1946                           ;setting_hardaware/uart.c: 57:         mystring[i] = '\0';
  1947   000A16  0E05               	movlw	low _mystring
  1948   000A18  2441               	addwf	ClearBuffer@i^0,w,c
  1949   000A1A  6ED9               	movwf	fsr2l,c
  1950   000A1C  0E00               	movlw	high _mystring
  1951   000A1E  2042               	addwfc	(ClearBuffer@i+1)^0,w,c
  1952   000A20  6EDA               	movwf	fsr2h,c
  1953   000A22  0E00               	movlw	0
  1954   000A24  6EDF               	movwf	indf2,c
  1955   000A26  4A41               	infsnz	ClearBuffer@i^0,f,c
  1956   000A28  2A42               	incf	(ClearBuffer@i+1)^0,f,c
  1957   000A2A  BE42               	btfsc	(ClearBuffer@i+1)^0,7,c
  1958   000A2C  EF21  F005         	goto	i2u18_41
  1959   000A30  5042               	movf	(ClearBuffer@i+1)^0,w,c
  1960   000A32  E109               	bnz	i2u18_40
  1961   000A34  0E0A               	movlw	10
  1962   000A36  5C41               	subwf	ClearBuffer@i^0,w,c
  1963   000A38  A0D8               	btfss	status,0,c
  1964   000A3A  EF21  F005         	goto	i2u18_41
  1965   000A3E  EF23  F005         	goto	i2u18_40
  1966   000A42                     i2u18_41:
  1967   000A42  EF0B  F005         	goto	i2l1031
  1968   000A46                     i2u18_40:
  1969   000A46                     
  1970                           ;setting_hardaware/uart.c: 58:     lenStr = 0;
  1971   000A46  0E00               	movlw	0
  1972   000A48  6E02               	movwf	(_lenStr+1)^0,c
  1973   000A4A  0E00               	movlw	0
  1974   000A4C  6E01               	movwf	_lenStr^0,c
  1975   000A4E  0012               	return		;funcret
  1976   000A50                     __end_of_ClearBuffer:
  1977                           	callstack 0
  1978                           
  1979                           	psect	rparam
  1980   000000                     
  1981                           	psect	temp
  1982   000061                     btemp:
  1983                           	callstack 0
  1984   000061                     	ds	1
  1985   000000                     int$flags	set	btemp
  1986   000000                     wtemp8	set	btemp+1
  1987   000000                     ttemp5	set	btemp+1
  1988   000000                     ttemp6	set	btemp+4
  1989   000000                     ttemp7	set	btemp+8
  1990                           
  1991                           	psect	idloc
  1992                           
  1993                           ;Config register IDLOC0 @ 0x200000
  1994                           ;	unspecified, using default values
  1995   200000                     	org	2097152
  1996   200000  FF                 	db	255
  1997                           
  1998                           ;Config register IDLOC1 @ 0x200001
  1999                           ;	unspecified, using default values
  2000   200001                     	org	2097153
  2001   200001  FF                 	db	255
  2002                           
  2003                           ;Config register IDLOC2 @ 0x200002
  2004                           ;	unspecified, using default values
  2005   200002                     	org	2097154
  2006   200002  FF                 	db	255
  2007                           
  2008                           ;Config register IDLOC3 @ 0x200003
  2009                           ;	unspecified, using default values
  2010   200003                     	org	2097155
  2011   200003  FF                 	db	255
  2012                           
  2013                           ;Config register IDLOC4 @ 0x200004
  2014                           ;	unspecified, using default values
  2015   200004                     	org	2097156
  2016   200004  FF                 	db	255
  2017                           
  2018                           ;Config register IDLOC5 @ 0x200005
  2019                           ;	unspecified, using default values
  2020   200005                     	org	2097157
  2021   200005  FF                 	db	255
  2022                           
  2023                           ;Config register IDLOC6 @ 0x200006
  2024                           ;	unspecified, using default values
  2025   200006                     	org	2097158
  2026   200006  FF                 	db	255
  2027                           
  2028                           ;Config register IDLOC7 @ 0x200007
  2029                           ;	unspecified, using default values
  2030   200007                     	org	2097159
  2031   200007  FF                 	db	255
  2032                           
  2033                           	psect	config
  2034                           
  2035                           ; Padding undefined space
  2036   300000                     	org	3145728
  2037   300000  FF                 	db	255
  2038                           
  2039                           ;Config register CONFIG1H @ 0x300001
  2040                           ;	Oscillator Selection bits
  2041                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2042                           ;	Fail-Safe Clock Monitor Enable bit
  2043                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2044                           ;	Internal/External Oscillator Switchover bit
  2045                           ;	IESO = ON, Oscillator Switchover mode enabled
  2046   300001                     	org	3145729
  2047   300001  88                 	db	136
  2048                           
  2049                           ;Config register CONFIG2L @ 0x300002
  2050                           ;	Power-up Timer Enable bit
  2051                           ;	PWRT = OFF, PWRT disabled
  2052                           ;	Brown-out Reset Enable bits
  2053                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2054                           ;	Brown Out Reset Voltage bits
  2055                           ;	BORV = 3, Minimum setting
  2056   300002                     	org	3145730
  2057   300002  1F                 	db	31
  2058                           
  2059                           ;Config register CONFIG2H @ 0x300003
  2060                           ;	Watchdog Timer Enable bit
  2061                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2062                           ;	Watchdog Timer Postscale Select bits
  2063                           ;	WDTPS = 1, 1:1
  2064   300003                     	org	3145731
  2065   300003  00                 	db	0
  2066                           
  2067                           ; Padding undefined space
  2068   300004                     	org	3145732
  2069   300004  FF                 	db	255
  2070                           
  2071                           ;Config register CONFIG3H @ 0x300005
  2072                           ;	CCP2 MUX bit
  2073                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2074                           ;	PORTB A/D Enable bit
  2075                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2076                           ;	Low-Power Timer1 Oscillator Enable bit
  2077                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2078                           ;	MCLR Pin Enable bit
  2079                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2080   300005                     	org	3145733
  2081   300005  83                 	db	131
  2082                           
  2083                           ;Config register CONFIG4L @ 0x300006
  2084                           ;	Stack Full/Underflow Reset Enable bit
  2085                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2086                           ;	Single-Supply ICSP Enable bit
  2087                           ;	LVP = OFF, Single-Supply ICSP disabled
  2088                           ;	Extended Instruction Set Enable bit
  2089                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2090                           ;	Background Debugger Enable bit
  2091                           ;	DEBUG = 0x1, unprogrammed default
  2092   300006                     	org	3145734
  2093   300006  81                 	db	129
  2094                           
  2095                           ; Padding undefined space
  2096   300007                     	org	3145735
  2097   300007  FF                 	db	255
  2098                           
  2099                           ;Config register CONFIG5L @ 0x300008
  2100                           ;	Code Protection bit
  2101                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2102                           ;	Code Protection bit
  2103                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2104                           ;	Code Protection bit
  2105                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2106                           ;	Code Protection bit
  2107                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2108   300008                     	org	3145736
  2109   300008  0F                 	db	15
  2110                           
  2111                           ;Config register CONFIG5H @ 0x300009
  2112                           ;	Boot Block Code Protection bit
  2113                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2114                           ;	Data EEPROM Code Protection bit
  2115                           ;	CPD = OFF, Data EEPROM not code-protected
  2116   300009                     	org	3145737
  2117   300009  C0                 	db	192
  2118                           
  2119                           ;Config register CONFIG6L @ 0x30000A
  2120                           ;	Write Protection bit
  2121                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2122                           ;	Write Protection bit
  2123                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2124                           ;	Write Protection bit
  2125                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2126                           ;	Write Protection bit
  2127                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2128   30000A                     	org	3145738
  2129   30000A  0F                 	db	15
  2130                           
  2131                           ;Config register CONFIG6H @ 0x30000B
  2132                           ;	Configuration Register Write Protection bit
  2133                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2134                           ;	Boot Block Write Protection bit
  2135                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2136                           ;	Data EEPROM Write Protection bit
  2137                           ;	WRTD = OFF, Data EEPROM not write-protected
  2138   30000B                     	org	3145739
  2139   30000B  E0                 	db	224
  2140                           
  2141                           ;Config register CONFIG7L @ 0x30000C
  2142                           ;	Table Read Protection bit
  2143                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2144                           ;	Table Read Protection bit
  2145                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2146                           ;	Table Read Protection bit
  2147                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2148                           ;	Table Read Protection bit
  2149                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2150   30000C                     	org	3145740
  2151   30000C  0F                 	db	15
  2152                           
  2153                           ;Config register CONFIG7H @ 0x30000D
  2154                           ;	Boot Block Table Read Protection bit
  2155                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2156   30000D                     	org	3145741
  2157   30000D  40                 	db	64
  2158                           tosu	equ	0xFFF
  2159                           tosh	equ	0xFFE
  2160                           tosl	equ	0xFFD
  2161                           stkptr	equ	0xFFC
  2162                           pclatu	equ	0xFFB
  2163                           pclath	equ	0xFFA
  2164                           pcl	equ	0xFF9
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           indf0	equ	0xFEF
  2172                           postinc0	equ	0xFEE
  2173                           postdec0	equ	0xFED
  2174                           preinc0	equ	0xFEC
  2175                           plusw0	equ	0xFEB
  2176                           fsr0h	equ	0xFEA
  2177                           fsr0l	equ	0xFE9
  2178                           wreg	equ	0xFE8
  2179                           indf1	equ	0xFE7
  2180                           postinc1	equ	0xFE6
  2181                           postdec1	equ	0xFE5
  2182                           preinc1	equ	0xFE4
  2183                           plusw1	equ	0xFE3
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           bsr	equ	0xFE0
  2187                           indf2	equ	0xFDF
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           preinc2	equ	0xFDC
  2191                           plusw2	equ	0xFDB
  2192                           fsr2h	equ	0xFDA
  2193                           fsr2l	equ	0xFD9
  2194                           status	equ	0xFD8

Data Sizes:
    Strings     1
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32      96
    BANK0           128      9       9
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_1(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_1(CODE[1]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> state(COMRAM[20]), str(COMRAM[20]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->_strcat
    i2_MyusartRead->i2___awmod
    _strcat->_strcpy
    _strcpy->_strlen
    _UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      77
                                              5 BANK0      4     4      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     463
                                              0 BANK0      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0     463
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               8     8      0    2097
                                             18 COMRAM     8     8      0
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                             _strcat
                             _strcpy
                      i2_MyusartRead
 ---------------------------------------------------------------------------------
 (7) i2_MyusartRead                                        0     0      0     370
                       i2_UART_Write
                          i2___awmod
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _strcat                                               4     0      4     942
                                             14 COMRAM     4     0      4
                          _GetString (ARG)
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     552
                                              4 COMRAM    10     6      4
                          _GetString (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (7) _UART_Write_Text                                      4     2      2     188
                                              1 COMRAM     4     2      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (8) i2_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ClearBuffer                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)
   _ClearBuffer
   _GetString
   _UART_Write_Text
     i2_UART_Write
   _strcat
     _GetString (ARG)
     _strcpy (ARG)
       _GetString (ARG)
       _strlen (ARG)
     _strlen (ARG)
   _strcpy
   i2_MyusartRead
     i2_UART_Write
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      9       9       4        7.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      60       1       76.2%
BITBIGSFR_1lhl       B      0       0      26        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRll          9      0       0      30        0.0%
BITBIGSFR_1lhhl      8      0       0      25        0.0%
BITBIGSFRlh          8      0       0      29        0.0%
BITBIGSFRhh          7      0       0      27        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1lhhh      5      0       0      22        0.0%
BITBIGSFR_1lhhl      4      0       0      24        0.0%
BITBIGSFR_1hl        4      0       0      21        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hh        2      0       0      20        0.0%
BITBIGSFR_1lhhl      2      0       0      23        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      28        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      31        0.0%
DATA                 0      0      69      33        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 05 19:37:15 2023

                           l85 0B52                             bsr 000FE0        __end_of_CCP1_Initialize 0B8C  
                          l102 0B8A                            l131 0B9C                            l109 0BA4  
                          l128 0B3C                            l164 0B0C                            _PR2 000FCB  
                          u700 08E4                            u701 08E0                            u680 08B8  
                          u681 08B4                            u690 08D2                            u691 08CE  
                          _str 002D                   ___awmod@sign 0060                            wreg 000FE8  
                         l1501 08AA                           l1511 08F0                           l1503 08B8  
                         l1441 0B80                           l1513 08F8                           l1505 08C0  
                         l1435 0B3E                           l1443 0B82                           l1451 0B96  
                         l1507 08D2                           l1515 0904                           l1437 0B40  
                         l1445 0B86                           l1461 0AFE                           l1453 0AEC  
                         l1509 08E4                           l1439 0B44                           l1447 0B88  
                         l1471 0B08                           l1463 0B00                           l1455 0AF6  
                         l1449 0B9E                           l1473 0B0A                           l1465 0B02  
                         l1457 0AFA                           l1481 0B38                           l1467 0B04  
                         l1459 0AFC                           l1475 0B28                           l1491 0894  
                         l1483 0880                           l1469 0B06                           l1477 0B30  
                         l1493 0898                           l1485 0884                           l1479 0B34  
                         l1495 089A                           l1487 0888                           l1497 089C  
                         l1489 088C                           l1499 08A6                           _ADFM 007E07  
                         STR_1 0601                           _CREN 007D5C                           _LATA 000F89  
                         _RCIF 007CF5                           i2l68 06FC                           _main 0880  
                         fsr0h 000FEA                           indf0 000FEF                           fsr2h 000FDA  
                         fsr0l 000FE9                           indf2 000FDF                           fsr2l 000FD9  
                         btemp 0061                           start 006C                   ___param_bank 000000  
      __end_of_UART_Write_Text 0A90               ?_UART_Initialize 0041  __end_of_OSCILLATOR_Initialize 0B9E  
                        ?_main 0041                __end_of___awmod 07D0                          _T2CON 000FCA  
                        _IRCF0 007E9C                          _IRCF1 007E9D                          _IRCF2 007E9E  
                        i1l170 0B68                          i1l167 0B56                          i1l443 07CE  
                        i1l196 0054                          i1l189 09BA                          i2l170 0B7E  
                        i2l173 0B94                          i2l167 0B6C                          i2l184 0A4E  
                        i2l179 0A8E                          i2l443 087E                          i2l189 0A0C  
                        i1l935 0B56                          i1l937 0B64                          i2l883 0968  
                        i2l877 0AEA                          i2l889 0AC4                          _RCREG 000FAE  
                        _SPBRG 000FAF                          _TRISA 000F92                          _TXREG 000FAD  
                  ?_UART_Write 0041                  i2_MyusartRead 09BC                          _state 0019  
                  _ClearBuffer 0A0E                          tablat 000FF5                          ttemp5 0062  
                        ttemp6 0065                          ttemp7 0069                          status 000FD8  
                        wtemp8 0062                __initialization 0B0E                   __end_of_main 090E  
                       ??_main 0085               ?_CCP1_Initialize 0041                  __activetblptr 000002  
               ?i2_MyusartRead 0041                         _ADCON1 000FC1                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         i1l1231 073E                         i1l1223 0720  
                       i1l1241 0776                         i1l1233 074C                         i1l1225 0724  
                       i1l1321 097A                         i1l1243 0784                         i1l1251 07AE  
                       i1l1235 0754                         i1l1227 0732                         i1l1323 099E  
                       i1l1253 07BE                         i1l1245 079A                         i1l1237 0766  
                       i1l1229 073A                         i1l1325 09A2                         i1l1317 096A  
                       i1l1255 07C6                         i1l1247 07A2                         i1l1239 076E  
                       i1l1327 09B4                         i1l1319 0978                         i1l1249 07A8  
                       i1l1521 004A                         i1l1523 0050                         i1l1517 002E  
                       i1l1519 003C                         i2l1031 0A16                         i2l1033 0A26  
                       i2l1025 0A0E                         i2l1035 0A2A                         i2l1037 0A46  
                       i2l1301 085E                         i2l1303 086E                         i2l1305 0876  
                       i2l1401 0648                         i2l1331 0B8C                         i2l1411 06B0  
                       i2l1403 064C                         i2l1341 0A5C                         i2l1181 091E  
                       i2l1261 0A9C                         i2l1421 06E8                         i2l1413 06B8  
                       i2l1405 0664                         i2l1271 0B7A                         i2l1343 0A6E  
                       i2l1263 0AA0                         i2l1335 0AC6                         i2l1351 09CC  
                       i2l1415 06CA                         i2l1407 068C                         i2l1345 0A72  
                       i2l1265 0AB8                         i2l1281 07EE                         i2l1273 07D0  
                       i2l1353 09F0                         i2l1417 06D2                         i2l1409 069E  
                       i2l1339 0A50                         i2l1179 090E                         i2l1259 0A90  
                       i2l1291 0826                         i2l1283 07FC                         i2l1275 07D4  
                       i2l1355 09F4                         i2l1347 09BC                         i2l1419 06E4  
                       i2l1269 0B6C                         i2l1293 0834                         i2l1285 0804  
                       i2l1277 07E2                         i2l1357 0A06                         i2l1349 09CA  
                       i2l1295 084A                         i2l1287 0816                         i2l1279 07EA  
                       i2l1297 0852                         i2l1289 081E                         i2l1299 0858  
                       i2l1395 0626                         i2l1397 0634                         i2l1399 0642  
                       i1u3_20 0B64                         i1u3_21 0B60                         _Hi_ISR 0008  
                       _Lo_ISR 0018                      ??___awmod 005F               ?_UART_Write_Text 0042  
                       _lenStr 0001                         clear_0 0B14                ___awmod@divisor 005D  
                       isa$std 000001                ___awmod@counter 005F                         _strcat 0AC6  
                       _strcpy 090E                         _strlen 0A90              __end_ofi2___awmod 0880  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                 i2___awmod@sign 0046              _SYSTEM_Initialize 0B28  
                   __accesstop 0080        __end_of__initialization 0B1A             ?_SYSTEM_Initialize 0041  
                ___rparam_used 000001              __end_of_GetString 0B96                 __pcstackCOMRAM 0041  
          ??_SYSTEM_Initialize 0085                ??i2_MyusartRead 0047                  ??_MyusartRead 0061  
                ?i2_UART_Write 0041      __end_of_SYSTEM_Initialize 0B3E                        ?_Hi_ISR 0041  
             i2UART_Write@data 0041                        ?_Lo_ISR 0041                        _CCP1CON 000FBD  
                      ?_strcat 004F                        ?_strcpy 0045                        ?_strlen 0041  
               ??i2_UART_Write 0041                   ??_UART_Write 005B                        i1u40_20 0766  
                      i1u40_21 0762                        i1u41_20 0784                        i1u41_21 0780  
                      i1u42_20 079A                        i1u42_21 0796                        i1u43_20 07BE  
                      i1u43_21 07BA                        i1u52_20 0978                        i1u52_21 0974  
                      i1u53_20 09B4                        i1u53_21 09B0                        i1u38_20 0732  
                      i1u38_21 072E                        i1u39_20 074C                        i1u71_20 003C  
                      i1u39_21 0748                        i1u71_21 0038                        i1u72_20 004A  
                      i1u72_21 0046                        i2u18_40 0A46                        i2u50_40 084A  
                      i2u18_41 0A42                        i2u50_41 0846                        i2u51_40 086E  
                      i2u51_41 086A                        i2u36_40 0956                        i2u44_40 0AB8  
                      i2u60_40 0634                        i2u44_41 0AB4                        i2u60_41 0630  
                      i2u36_47 094C                        i2u45_40 0B7A                        i2u37_40 0968  
                      i2u61_40 0642                        i2u45_41 0B76                        i2u37_41 0964  
                      i2u61_41 063E                        i2u54_40 0A8E                        i2u46_40 07E2  
                      i2u62_40 069E                        i2u54_41 0A8A                        i2u46_41 07DE  
                      i2u62_41 069A                        i2u47_40 07FC                        i2u55_40 09CA  
                      i2u63_40 06B0                        i2u47_41 07F8                        i2u55_41 09C6  
                      i2u63_41 06AC                        i2u48_40 0816                        i2u56_40 0A06  
                      i2u64_40 06CA                        i2u48_41 0812                        i2u56_41 0A02  
                      i2u64_41 06C6                        i2u49_40 0834                        i2u65_40 06E4  
                      i2u49_41 0830                        i2u65_41 06E0                   ?_ClearBuffer 0041  
          __end_of_MyusartRead 09BC                        __Hparam 0000                        __Lparam 0000  
                      ___awmod 0720             __end_of_UART_Write 0B6A                   __psmallconst 0600  
                      __pcinit 0B0E                        __ramtop 0600                        __ptext0 0880  
                      __ptext1 0B28                        __ptext2 0AEC                        __ptext3 0B96  
                      __ptext4 0B9E                        __ptext5 0B80                        __ptext6 0B3E  
                      __ptext8 096A                        __ptext9 0720          _OSCILLATOR_Initialize 0B96  
             ___awmod@dividend 005B                 __pintcode_body 0604           end_of_initialization 0B1A  
                __Lmediumconst 0000                        int_func 0604                      _RCSTAbits 000FAB  
                      postinc0 000FEE                        strcpy@d 004D                        strlen@a 0043  
                      strcpy@s 004B                        strlen@s 0041                 UART_Write@data 005B  
                    _TRISCbits 000F94                    _MyusartRead 096A                      i2___awmod 07D0  
                    _TXSTAbits 000FAC                 __end_of_Hi_ISR 0720                 __end_of_Lo_ISR 006C  
         __end_ofi2_UART_Write 0B80   __end_of_INTERRUPT_Initialize 0BA6                      _GetString 0B8C  
                  _BAUDCONbits 000FB8                 _ADC_Initialize 0B3E         ?_OSCILLATOR_Initialize 0041  
               __end_of_strcat 0AEC                 __end_of_strcpy 096A                 __end_of_strlen 0AC6  
          start_initialization 0B0E                     ?i2___awmod 0041                   ClearBuffer@i 0041  
            ??_UART_Initialize 0085                       ??_Hi_ISR 0053                       ??_Lo_ISR 0080  
       __end_of_ADC_Initialize 0B54                     ?_GetString 0041                       ??_strcat 0053  
                     ??_strcpy 0049                       ??_strlen 0043                    __pbssCOMRAM 0001  
                __pcstackBANK0 0080          __end_ofi2_MyusartRead 0A0E              ??_CCP1_Initialize 0085  
                    __pintcode 0008                       ?___awmod 005B                ?_ADC_Initialize 0041  
                  __pintcodelo 0018                    __smallconst 0600                      _lightmode 0003  
                  ??i2___awmod 0045              ??_UART_Write_Text 0044           _INTERRUPT_Initialize 0B9E  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D                       _PIR1bits 000F9E  
                     _RCONbits 000FD0                    ??_GetString 0043                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0                      main@count 0087                   ?_MyusartRead 0041  
                 i2_UART_Write 0B6A          ?_INTERRUPT_Initialize 0041             i2___awmod@dividend 0041  
                     __Hrparam 0000                       __Lrparam 0000        ??_OSCILLATOR_Initialize 0085  
              _UART_Initialize 0AEC                     strcat@dest 004F                       _main$169 0085  
                     __ptext10 0B54                       __ptext20 0A0E                       __ptext12 09BC  
                     __ptext13 07D0                       __ptext14 0AC6                       __ptext15 0A90  
                     __ptext16 090E                       __ptext17 0A50                       __ptext18 0B6A  
                     __ptext19 0B8C                     strcpy@dest 0045            UART_Write_Text@text 0042  
                     isa$xinst 000000                       int$flags 0061                       _mystring 0005  
            i2___awmod@divisor 0043              i2___awmod@counter 0045                     _INTCONbits 000FF2  
              _CCP1_Initialize 0B80         ??_INTERRUPT_Initialize 0085                  ??_ClearBuffer 0041  
                     intlevel1 0000                       intlevel2 0000                      strcat@src 0051  
                    strcpy@src 0047               ??_ADC_Initialize 0085        __end_of_UART_Initialize 0B0E  
              _UART_Write_Text 0A50                     _UART_Write 0B54               UART_Write_Text@i 0044  
          __end_of_ClearBuffer 0A50  
