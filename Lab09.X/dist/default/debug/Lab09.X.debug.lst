

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 15:59:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.40
    18                           ; Generated 04/07/2022 GMT
    19                           ; 
    20                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _PIE1bits	set	3997
    53   000000                     _PIR1bits	set	3998
    54   000000                     _ADRESL	set	4035
    55   000000                     _ADRESH	set	4036
    56   000000                     _PORTB	set	3969
    57   000000                     _INTCONbits	set	4082
    58   000000                     _OSCCONbits	set	4051
    59   000000                     _TRISAbits	set	3986
    60   000000                     _ADCON2bits	set	4032
    61   000000                     _ADCON1bits	set	4033
    62   000000                     _ADCON0bits	set	4034
    63   000000                     _TRISB	set	3987
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   000178                     __pcinit:
    69                           	callstack 0
    70   000178                     start_initialization:
    71                           	callstack 0
    72   000178                     __initialization:
    73                           	callstack 0
    74   000178                     end_of_initialization:
    75                           	callstack 0
    76   000178                     __end_of__initialization:
    77                           	callstack 0
    78   000178  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    79   00017A  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    80   00017C  0100               	movlb	0
    81   00017E  EF9A  F000         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	cstackCOMRAM
    84   000001                     __pcstackCOMRAM:
    85                           	callstack 0
    86   000001                     ?___awdiv:
    87                           	callstack 0
    88   000001                     ___awdiv@dividend:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x0
    92   000001                     	ds	2
    93   000003                     ___awdiv@divisor:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0x2
    97   000003                     	ds	2
    98   000005                     ___awdiv@counter:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x4
   102   000005                     	ds	1
   103   000006                     ___awdiv@sign:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x5
   107   000006                     	ds	1
   108   000007                     ___awdiv@quotient:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x6
   112   000007                     	ds	2
   113   000009                     ??_H_ISR:
   114                           
   115                           ; 1 bytes @ 0x8
   116   000009                     	ds	2
   117   00000B                     H_ISR@value:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0xA
   121   00000B                     	ds	2
   122   00000D                     H_ISR@i:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0xC
   126   00000D                     	ds	2
   127   00000F                     
   128                           ; 1 bytes @ 0xE
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 34 in file "basic.c"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;		None
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, status,2
   143 ;; Tracked objects:
   144 ;;		On entry : 0/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   148 ;;      Params:         0       0       0       0       0       0       0
   149 ;;      Locals:         0       0       0       0       0       0       0
   150 ;;      Temps:          0       0       0       0       0       0       0
   151 ;;      Totals:         0       0       0       0       0       0       0
   152 ;;Total ram usage:        0 bytes
   153 ;; Hardware stack levels required when called: 2
   154 ;; This function calls:
   155 ;;		Nothing
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162   000134                     __ptext0:
   163                           	callstack 0
   164   000134                     _main:
   165                           	callstack 29
   166   000134                     
   167                           ;basic.c: 37:     ADCON0bits.ADON = 1;
   168   000134  50D3               	movf	211,w,c	;volatile
   169   000136  0B8F               	andlw	-113
   170   000138  0940               	iorlw	64
   171   00013A  6ED3               	movwf	211,c	;volatile
   172   00013C                     
   173                           ;basic.c: 38:     ADCON2bits.ADFM = 1;
   174   00013C  8092               	bsf	146,0,c	;volatile
   175                           
   176                           ;basic.c: 39: 
   177   00013E  0E00               	movlw	0
   178   000140  6E93               	movwf	147,c	;volatile
   179                           
   180                           ;basic.c: 40: 
   181   000142  0E00               	movlw	0
   182   000144  6E81               	movwf	129,c	;volatile
   183   000146                     
   184                           ;basic.c: 43:     PIR1bits.ADIF = 0;
   185   000146  98C1               	bcf	193,4,c	;volatile
   186   000148                     
   187                           ;basic.c: 44:     INTCONbits.PEIE = 1;
   188   000148  9AC1               	bcf	193,5,c	;volatile
   189                           
   190                           ;basic.c: 45:     INTCONbits.GIE = 1;
   191   00014A  50C1               	movf	193,w,c	;volatile
   192   00014C  0BF0               	andlw	-16
   193   00014E  090E               	iorlw	14
   194   000150  6EC1               	movwf	193,c	;volatile
   195                           
   196                           ;basic.c: 46: 
   197   000152  0EC3               	movlw	-61
   198   000154  16C2               	andwf	194,f,c	;volatile
   199                           
   200                           ;basic.c: 47: 
   201   000156  0EF8               	movlw	-8
   202   000158  16C0               	andwf	192,f,c	;volatile
   203                           
   204                           ;basic.c: 48: 
   205   00015A  50C0               	movf	192,w,c	;volatile
   206   00015C  0BC7               	andlw	-57
   207   00015E  0908               	iorlw	8
   208   000160  6EC0               	movwf	192,c	;volatile
   209   000162                     
   210                           ;basic.c: 49:     ADCON0bits.GO = 1;
   211   000162  80C2               	bsf	194,0,c	;volatile
   212   000164                     
   213                           ;basic.c: 50: 
   214   000164  8EC0               	bsf	192,7,c	;volatile
   215   000166                     
   216                           ;basic.c: 54: }
   217   000166  8C9D               	bsf	157,6,c	;volatile
   218   000168  9C9E               	bcf	158,6,c	;volatile
   219   00016A  8CF2               	bsf	242,6,c	;volatile
   220   00016C  8EF2               	bsf	242,7,c	;volatile
   221   00016E  82C2               	bsf	194,1,c	;volatile
   222   000170                     l36:
   223   000170  EFB8  F000         	goto	l36
   224   000174  EF07  F000         	goto	start
   225   000178                     __end_of_main:
   226                           	callstack 0
   227                           
   228 ;; *************** function _H_ISR *****************
   229 ;; Defined at:
   230 ;;		line 12 in file "basic.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  i               2   12[COMRAM] int 
   235 ;;  value           2   10[COMRAM] int 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   245 ;;      Params:         0       0       0       0       0       0       0
   246 ;;      Locals:         4       0       0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0       0       0
   248 ;;      Totals:         6       0       0       0       0       0       0
   249 ;;Total ram usage:        6 bytes
   250 ;; Hardware stack levels used: 1
   251 ;; Hardware stack levels required when called: 1
   252 ;; This function calls:
   253 ;;		___awdiv
   254 ;; This function is called by:
   255 ;;		Interrupt level 2
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	intcode
   260   000008                     __pintcode:
   261                           	callstack 0
   262   000008                     _H_ISR:
   263                           	callstack 29
   264                           
   265                           ;incstack = 0
   266   000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   267   00000A  ED6B  F000         	call	int_func,f	;refresh shadow registers
   268                           
   269                           	psect	intcode_body
   270   0000D6                     __pintcode_body:
   271                           	callstack 29
   272   0000D6                     int_func:
   273                           	callstack 29
   274   0000D6  0006               	pop		; remove dummy address from shadow register refresh
   275   0000D8                     
   276                           ;basic.c: 15: 
   277   0000D8  50C4               	movf	196,w,c	;volatile
   278   0000DA  6E0A               	movwf	(??_H_ISR+1)^0,c
   279   0000DC  6A09               	clrf	??_H_ISR^0,c
   280   0000DE  50C3               	movf	195,w,c	;volatile
   281   0000E0  2409               	addwf	??_H_ISR^0,w,c
   282   0000E2  6E01               	movwf	___awdiv@dividend^0,c
   283   0000E4  0E00               	movlw	0
   284   0000E6  200A               	addwfc	(??_H_ISR+1)^0,w,c
   285   0000E8  6E02               	movwf	(___awdiv@dividend+1)^0,c
   286   0000EA  0E00               	movlw	0
   287   0000EC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   288   0000EE  0E3F               	movlw	63
   289   0000F0  6E03               	movwf	___awdiv@divisor^0,c
   290   0000F2  EC09  F000         	call	___awdiv	;wreg free
   291   0000F6  0EFF               	movlw	255
   292   0000F8  2401               	addwf	?___awdiv^0,w,c
   293   0000FA  6E0B               	movwf	H_ISR@value^0,c
   294   0000FC  0EFF               	movlw	255
   295   0000FE  2002               	addwfc	(?___awdiv+1)^0,w,c
   296   000100  6E0C               	movwf	(H_ISR@value+1)^0,c
   297   000102                     
   298                           ;basic.c: 17: 
   299   000102  C00B  FF81         	movff	H_ISR@value,3969	;volatile
   300   000106                     
   301                           ;basic.c: 21: 
   302   000106  9C9E               	bcf	158,6,c	;volatile
   303   000108                     
   304                           ;basic.c: 28:     PORTB = 0;
   305   000108  0E00               	movlw	0
   306   00010A  6E0E               	movwf	(H_ISR@i+1)^0,c
   307   00010C  0E00               	movlw	0
   308   00010E  6E0D               	movwf	H_ISR@i^0,c
   309   000110                     i2l853:
   310   000110  4A0D               	infsnz	H_ISR@i^0,f,c
   311   000112  2A0E               	incf	(H_ISR@i+1)^0,f,c
   312   000114  BE0E               	btfsc	(H_ISR@i+1)^0,7,c
   313   000116  EF95  F000         	goto	i2u14_41
   314   00011A  500E               	movf	(H_ISR@i+1)^0,w,c
   315   00011C  E108               	bnz	i2u14_40
   316   00011E  040D               	decf	H_ISR@i^0,w,c
   317   000120  A0D8               	btfss	status,0,c
   318   000122  EF95  F000         	goto	i2u14_41
   319   000126  EF97  F000         	goto	i2u14_40
   320   00012A                     i2u14_41:
   321   00012A  EF88  F000         	goto	i2l853
   322   00012E                     i2u14_40:
   323   00012E                     
   324                           ;basic.c: 30: 
   325   00012E  82C2               	bsf	194,1,c	;volatile
   326   000130  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   000132  0011               	retfie		f
   328   000134                     __end_of_H_ISR:
   329                           	callstack 0
   330                           
   331 ;; *************** function ___awdiv *****************
   332 ;; Defined at:
   333 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;  dividend        2    0[COMRAM] int 
   336 ;;  divisor         2    2[COMRAM] int 
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  quotient        2    6[COMRAM] int 
   339 ;;  sign            1    5[COMRAM] unsigned char 
   340 ;;  counter         1    4[COMRAM] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2    0[COMRAM] int 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   350 ;;      Params:         4       0       0       0       0       0       0
   351 ;;      Locals:         4       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0
   353 ;;      Totals:         8       0       0       0       0       0       0
   354 ;;Total ram usage:        8 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		_H_ISR
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text2
   364   000012                     __ptext2:
   365                           	callstack 0
   366   000012                     ___awdiv:
   367                           	callstack 29
   368   000012  0E00               	movlw	0
   369   000014  6E06               	movwf	___awdiv@sign^0,c
   370   000016  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   371   000018  EF12  F000         	goto	i2u8_40
   372   00001C  EF10  F000         	goto	i2u8_41
   373   000020                     i2u8_41:
   374   000020  EF18  F000         	goto	i2l805
   375   000024                     i2u8_40:
   376   000024  6C03               	negf	___awdiv@divisor^0,c
   377   000026  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   378   000028  B0D8               	btfsc	status,0,c
   379   00002A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   380   00002C  0E01               	movlw	1
   381   00002E  6E06               	movwf	___awdiv@sign^0,c
   382   000030                     i2l805:
   383   000030  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   384   000032  EF1F  F000         	goto	i2u9_40
   385   000036  EF1D  F000         	goto	i2u9_41
   386   00003A                     i2u9_41:
   387   00003A  EF25  F000         	goto	i2l811
   388   00003E                     i2u9_40:
   389   00003E  6C01               	negf	___awdiv@dividend^0,c
   390   000040  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   391   000042  B0D8               	btfsc	status,0,c
   392   000044  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   393   000046  0E01               	movlw	1
   394   000048  1A06               	xorwf	___awdiv@sign^0,f,c
   395   00004A                     i2l811:
   396   00004A  0E00               	movlw	0
   397   00004C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   398   00004E  0E00               	movlw	0
   399   000050  6E07               	movwf	___awdiv@quotient^0,c
   400   000052  5003               	movf	___awdiv@divisor^0,w,c
   401   000054  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   402   000056  B4D8               	btfsc	status,2,c
   403   000058  EF30  F000         	goto	i2u10_41
   404   00005C  EF32  F000         	goto	i2u10_40
   405   000060                     i2u10_41:
   406   000060  EF5A  F000         	goto	i2l833
   407   000064                     i2u10_40:
   408   000064  0E01               	movlw	1
   409   000066  6E05               	movwf	___awdiv@counter^0,c
   410   000068  EF3A  F000         	goto	i2l819
   411   00006C                     i2l817:
   412   00006C  90D8               	bcf	status,0,c
   413   00006E  3603               	rlcf	___awdiv@divisor^0,f,c
   414   000070  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   415   000072  2A05               	incf	___awdiv@counter^0,f,c
   416   000074                     i2l819:
   417   000074  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   418   000076  EF3F  F000         	goto	i2u11_41
   419   00007A  EF41  F000         	goto	i2u11_40
   420   00007E                     i2u11_41:
   421   00007E  EF36  F000         	goto	i2l817
   422   000082                     i2u11_40:
   423   000082                     i2l821:
   424   000082  90D8               	bcf	status,0,c
   425   000084  3607               	rlcf	___awdiv@quotient^0,f,c
   426   000086  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   427   000088  5003               	movf	___awdiv@divisor^0,w,c
   428   00008A  5C01               	subwf	___awdiv@dividend^0,w,c
   429   00008C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   430   00008E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   431   000090  A0D8               	btfss	status,0,c
   432   000092  EF4D  F000         	goto	i2u12_41
   433   000096  EF4F  F000         	goto	i2u12_40
   434   00009A                     i2u12_41:
   435   00009A  EF54  F000         	goto	i2l829
   436   00009E                     i2u12_40:
   437   00009E  5003               	movf	___awdiv@divisor^0,w,c
   438   0000A0  5E01               	subwf	___awdiv@dividend^0,f,c
   439   0000A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   440   0000A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   441   0000A6  8007               	bsf	___awdiv@quotient^0,0,c
   442   0000A8                     i2l829:
   443   0000A8  90D8               	bcf	status,0,c
   444   0000AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   445   0000AC  3203               	rrcf	___awdiv@divisor^0,f,c
   446   0000AE  2E05               	decfsz	___awdiv@counter^0,f,c
   447   0000B0  EF41  F000         	goto	i2l821
   448   0000B4                     i2l833:
   449   0000B4  5006               	movf	___awdiv@sign^0,w,c
   450   0000B6  B4D8               	btfsc	status,2,c
   451   0000B8  EF60  F000         	goto	i2u13_41
   452   0000BC  EF62  F000         	goto	i2u13_40
   453   0000C0                     i2u13_41:
   454   0000C0  EF66  F000         	goto	i2l837
   455   0000C4                     i2u13_40:
   456   0000C4  6C07               	negf	___awdiv@quotient^0,c
   457   0000C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   458   0000C8  B0D8               	btfsc	status,0,c
   459   0000CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   460   0000CC                     i2l837:
   461   0000CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   462   0000D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   463   0000D4  0012               	return		;funcret
   464   0000D6                     __end_of___awdiv:
   465                           	callstack 0
   466   000000                     
   467                           	psect	rparam
   468   000000                     
   469                           	psect	temp
   470   00000F                     btemp:
   471                           	callstack 0
   472   00000F                     	ds	1
   473   000000                     int$flags	set	btemp
   474   000000                     wtemp8	set	btemp+1
   475   000000                     ttemp5	set	btemp+1
   476   000000                     ttemp6	set	btemp+4
   477   000000                     ttemp7	set	btemp+8
   478                           
   479                           	psect	idloc
   480                           
   481                           ;Config register IDLOC0 @ 0x200000
   482                           ;	unspecified, using default values
   483   200000                     	org	2097152
   484   200000  FF                 	db	255
   485                           
   486                           ;Config register IDLOC1 @ 0x200001
   487                           ;	unspecified, using default values
   488   200001                     	org	2097153
   489   200001  FF                 	db	255
   490                           
   491                           ;Config register IDLOC2 @ 0x200002
   492                           ;	unspecified, using default values
   493   200002                     	org	2097154
   494   200002  FF                 	db	255
   495                           
   496                           ;Config register IDLOC3 @ 0x200003
   497                           ;	unspecified, using default values
   498   200003                     	org	2097155
   499   200003  FF                 	db	255
   500                           
   501                           ;Config register IDLOC4 @ 0x200004
   502                           ;	unspecified, using default values
   503   200004                     	org	2097156
   504   200004  FF                 	db	255
   505                           
   506                           ;Config register IDLOC5 @ 0x200005
   507                           ;	unspecified, using default values
   508   200005                     	org	2097157
   509   200005  FF                 	db	255
   510                           
   511                           ;Config register IDLOC6 @ 0x200006
   512                           ;	unspecified, using default values
   513   200006                     	org	2097158
   514   200006  FF                 	db	255
   515                           
   516                           ;Config register IDLOC7 @ 0x200007
   517                           ;	unspecified, using default values
   518   200007                     	org	2097159
   519   200007  FF                 	db	255
   520                           
   521                           	psect	config
   522                           
   523                           ; Padding undefined space
   524   300000                     	org	3145728
   525   300000  FF                 	db	255
   526                           
   527                           ;Config register CONFIG1H @ 0x300001
   528                           ;	Oscillator Selection bits
   529                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   530                           ;	Fail-Safe Clock Monitor Enable bit
   531                           ;	FCMEN = 0x0, unprogrammed default
   532                           ;	Internal/External Oscillator Switchover bit
   533                           ;	IESO = 0x0, unprogrammed default
   534   300001                     	org	3145729
   535   300001  08                 	db	8
   536                           
   537                           ;Config register CONFIG2L @ 0x300002
   538                           ;	Power-up Timer Enable bit
   539                           ;	PWRT = OFF, PWRT disabled
   540                           ;	Brown-out Reset Enable bits
   541                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   542                           ;	Brown Out Reset Voltage bits
   543                           ;	BORV = 0x3, unprogrammed default
   544   300002                     	org	3145730
   545   300002  1B                 	db	27
   546                           
   547                           ;Config register CONFIG2H @ 0x300003
   548                           ;	Watchdog Timer Enable bit
   549                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   550                           ;	Watchdog Timer Postscale Select bits
   551                           ;	WDTPS = 0xF, unprogrammed default
   552   300003                     	org	3145731
   553   300003  1E                 	db	30
   554                           
   555                           ; Padding undefined space
   556   300004                     	org	3145732
   557   300004  FF                 	db	255
   558                           
   559                           ;Config register CONFIG3H @ 0x300005
   560                           ;	CCP2 MUX bit
   561                           ;	CCP2MX = 0x1, unprogrammed default
   562                           ;	PORTB A/D Enable bit
   563                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   564                           ;	Low-Power Timer1 Oscillator Enable bit
   565                           ;	LPT1OSC = 0x0, unprogrammed default
   566                           ;	MCLR Pin Enable bit
   567                           ;	MCLRE = 0x1, unprogrammed default
   568   300005                     	org	3145733
   569   300005  81                 	db	129
   570                           
   571                           ;Config register CONFIG4L @ 0x300006
   572                           ;	Stack Full/Underflow Reset Enable bit
   573                           ;	STVREN = 0x1, unprogrammed default
   574                           ;	Single-Supply ICSP Enable bit
   575                           ;	LVP = OFF, Single-Supply ICSP disabled
   576                           ;	Extended Instruction Set Enable bit
   577                           ;	XINST = 0x0, unprogrammed default
   578                           ;	Background Debugger Enable bit
   579                           ;	DEBUG = 0x1, unprogrammed default
   580   300006                     	org	3145734
   581   300006  81                 	db	129
   582                           
   583                           ; Padding undefined space
   584   300007                     	org	3145735
   585   300007  FF                 	db	255
   586                           
   587                           ;Config register CONFIG5L @ 0x300008
   588                           ;	unspecified, using default values
   589                           ;	Code Protection bit
   590                           ;	CP0 = 0x1, unprogrammed default
   591                           ;	Code Protection bit
   592                           ;	CP1 = 0x1, unprogrammed default
   593                           ;	Code Protection bit
   594                           ;	CP2 = 0x1, unprogrammed default
   595                           ;	Code Protection bit
   596                           ;	CP3 = 0x1, unprogrammed default
   597   300008                     	org	3145736
   598   300008  0F                 	db	15
   599                           
   600                           ;Config register CONFIG5H @ 0x300009
   601                           ;	Boot Block Code Protection bit
   602                           ;	CPB = 0x1, unprogrammed default
   603                           ;	Data EEPROM Code Protection bit
   604                           ;	CPD = OFF, Data EEPROM not code-protected
   605   300009                     	org	3145737
   606   300009  C0                 	db	192
   607                           
   608                           ;Config register CONFIG6L @ 0x30000A
   609                           ;	unspecified, using default values
   610                           ;	Write Protection bit
   611                           ;	WRT0 = 0x1, unprogrammed default
   612                           ;	Write Protection bit
   613                           ;	WRT1 = 0x1, unprogrammed default
   614                           ;	Write Protection bit
   615                           ;	WRT2 = 0x1, unprogrammed default
   616                           ;	Write Protection bit
   617                           ;	WRT3 = 0x1, unprogrammed default
   618   30000A                     	org	3145738
   619   30000A  0F                 	db	15
   620                           
   621                           ;Config register CONFIG6H @ 0x30000B
   622                           ;	unspecified, using default values
   623                           ;	Configuration Register Write Protection bit
   624                           ;	WRTC = 0x1, unprogrammed default
   625                           ;	Boot Block Write Protection bit
   626                           ;	WRTB = 0x1, unprogrammed default
   627                           ;	Data EEPROM Write Protection bit
   628                           ;	WRTD = 0x1, unprogrammed default
   629   30000B                     	org	3145739
   630   30000B  E0                 	db	224
   631                           
   632                           ;Config register CONFIG7L @ 0x30000C
   633                           ;	unspecified, using default values
   634                           ;	Table Read Protection bit
   635                           ;	EBTR0 = 0x1, unprogrammed default
   636                           ;	Table Read Protection bit
   637                           ;	EBTR1 = 0x1, unprogrammed default
   638                           ;	Table Read Protection bit
   639                           ;	EBTR2 = 0x1, unprogrammed default
   640                           ;	Table Read Protection bit
   641                           ;	EBTR3 = 0x1, unprogrammed default
   642   30000C                     	org	3145740
   643   30000C  0F                 	db	15
   644                           
   645                           ;Config register CONFIG7H @ 0x30000D
   646                           ;	unspecified, using default values
   647                           ;	Boot Block Table Read Protection bit
   648                           ;	EBTRB = 0x1, unprogrammed default
   649   30000D                     	org	3145741
   650   30000D  40                 	db	64
   651                           tosu	equ	0xFFF
   652                           tosh	equ	0xFFE
   653                           tosl	equ	0xFFD
   654                           stkptr	equ	0xFFC
   655                           pclatu	equ	0xFFB
   656                           pclath	equ	0xFFA
   657                           pcl	equ	0xFF9
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           prodh	equ	0xFF4
   663                           prodl	equ	0xFF3
   664                           indf0	equ	0xFEF
   665                           postinc0	equ	0xFEE
   666                           postdec0	equ	0xFED
   667                           preinc0	equ	0xFEC
   668                           plusw0	equ	0xFEB
   669                           fsr0h	equ	0xFEA
   670                           fsr0l	equ	0xFE9
   671                           wreg	equ	0xFE8
   672                           indf1	equ	0xFE7
   673                           postinc1	equ	0xFE6
   674                           postdec1	equ	0xFE5
   675                           preinc1	equ	0xFE4
   676                           plusw1	equ	0xFE3
   677                           fsr1h	equ	0xFE2
   678                           fsr1l	equ	0xFE1
   679                           bsr	equ	0xFE0
   680                           indf2	equ	0xFDF
   681                           postinc2	equ	0xFDE
   682                           postdec2	equ	0xFDD
   683                           preinc2	equ	0xFDC
   684                           plusw2	equ	0xFDB
   685                           fsr2h	equ	0xFDA
   686                           fsr2l	equ	0xFD9
   687                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     14      14
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                6     6      0     521
                                              8 COMRAM     6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      E       E       1       11.1%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1h         E      0       0      20        0.0%
BITBIGSFR_1lh       21      0       0      21        0.0%
BITBIGSFRhh          8      0       0      22        0.0%
BITBIGSFRhl         10      0       0      23        0.0%
BITBIGSFRl           1      0       0      24        0.0%
ABS                  0      0       0      25        0.0%
BIGRAM             5F3      0       0      26        0.0%
DATA                 0      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 15:59:23 2022

                     l36 0170                       l37 0170             ___awdiv@sign 0006  
                    l781 0148                      l791 016A                      l783 0162  
                    l775 0134                      l793 016C                      l785 0164  
                    l777 013C                      l795 016E                      l787 0166  
                    l779 0146                      l789 0168                     i2l30 012E  
                   i2l31 0130                     _main 0134                     btemp 000F  
                   start 000E             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 00D6          ___awdiv@divisor 0003                    i2l273 00D4  
                  i2l801 0024                    i2l811 004A                    i2l803 002C  
                  i2l821 0082                    i2l813 0052                    i2l805 0030  
                  i2l831 00AE                    i2l823 0088                    i2l815 0064  
                  i2l807 003E                    i2l825 009E                    i2l817 006C  
                  i2l833 00B4                    i2l809 0046                    i2l841 00D8  
                  i2l835 00C4                    i2l827 00A6                    i2l819 0074  
                  i2l843 0102                    i2l837 00CC                    i2l829 00A8  
                  i2l853 0110                    i2l845 0106                    i2l855 0114  
                  i2l847 0108          ___awdiv@counter 0005                    i2l797 0012  
                  i2l799 0016                    _H_ISR 0008                    _PORTB 000F81  
                  _TRISB 000F93                    ttemp5 0010                    ttemp6 0013  
                  ttemp7 0017                    status 000FD8                    wtemp8 0010  
        __initialization 0178             __end_of_main 0178                   ??_main 000F  
          __activetblptr 000000                   ?_H_ISR 0001                   H_ISR@i 000D  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
                 i2u8_40 0024                   i2u8_41 0020                   i2u9_40 003E  
                 i2u9_41 003A                ??___awdiv 0005         ___awdiv@quotient 0007  
                 isa$std 000001               __accesstop 0080  __end_of__initialization 0178  
          ___rparam_used 000001            __end_of_H_ISR 0134           __pcstackCOMRAM 0001  
                ??_H_ISR 0009                  i2u10_40 0064                  i2u10_41 0060  
                i2u11_40 0082                  i2u11_41 007E                  i2u12_40 009E  
                i2u12_41 009A                  i2u13_40 00C4                  i2u13_41 00C0  
                i2u14_40 012E                  i2u14_41 012A                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0012                  __pcinit 0178  
                __ramtop 0600                  __ptext0 0134                  __ptext2 0012  
         __pintcode_body 00D6     end_of_initialization 0178                  int_func 00D6  
              _TRISAbits 000F92      start_initialization 0178                __pintcode 0008  
               ?___awdiv 0001               H_ISR@value 000B                 _PIE1bits 000F9D  
               _PIR1bits 000F9E               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000                 int$flags 000F               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3  
